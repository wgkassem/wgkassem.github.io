{"meta":{"version":1,"warehouse":"5.0.1"},"models":{"Asset":[{"_id":"node_modules/hexo-theme-icarus/source/css/default.styl","path":"css/default.styl","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-icarus/source/css/cyberpunk.styl","path":"css/cyberpunk.styl","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-icarus/source/css/night.styl","path":"css/night.styl","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-icarus/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-icarus/source/img/favicon.png","path":"img/favicon.png","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-icarus/source/img/me.MP.jpg","path":"img/me.MP.jpg","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-icarus/source/img/logo.png","path":"img/logo.png","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-icarus/source/img/og_image.png","path":"img/og_image.png","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-icarus/source/img/razor-bottom-black.svg","path":"img/razor-bottom-black.svg","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-icarus/source/img/razor-top-black.svg","path":"img/razor-top-black.svg","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-icarus/source/js/animation.js","path":"js/animation.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-icarus/source/js/back_to_top.js","path":"js/back_to_top.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-icarus/source/js/column.js","path":"js/column.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-icarus/source/js/main.js","path":"js/main.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-icarus/source/js/pjax.js","path":"js/pjax.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-icarus/source/js/imaegoo/night.js","path":"js/imaegoo/night.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-icarus/source/js/imaegoo/universe.js","path":"js/imaegoo/universe.js","modified":0,"renderable":1}],"Cache":[{"_id":"source/_posts/hello-world.md","hash":"6d32d528cf04cc2d4a78909c54d86d0ea7165275","modified":1729072457119},{"_id":"themes/icarus/layout/comment/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1722343122673},{"_id":"themes/icarus/layout/donate/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1722343122676},{"_id":"themes/icarus/layout/misc/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1722343122677},{"_id":"themes/icarus/layout/search/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1722343122678},{"_id":"themes/icarus/layout/share/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1722343122678},{"_id":"themes/icarus/include/schema/misc/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1722343122660},{"_id":"themes/icarus/include/schema/comment/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1722343122656},{"_id":"themes/icarus/include/schema/donate/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1722343122659},{"_id":"themes/icarus/include/schema/search/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1722343122662},{"_id":"themes/icarus/include/schema/share/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1722343122663},{"_id":"themes/icarus/.eslintrc.json","hash":"ca45d8e5d80ad6b7004cddacae7fc7d8040b2d6f","modified":1722343122649},{"_id":"themes/icarus/.eslintignore","hash":"5410a1bef9807f666cd92a0d2020f700e67e4096","modified":1722343122649},{"_id":"themes/icarus/.npmignore","hash":"42242c8da7a020a3295e7dd3d18bf022cb08b661","modified":1722343122654},{"_id":"themes/icarus/.gitignore","hash":"36084c0851a22bfd393933abb8e262562ffc6802","modified":1722343122653},{"_id":"themes/icarus/CONTRIBUTING.md","hash":"70254c6778c1e41bb2ff222bbf3a70b2239b9bc1","modified":1722343122654},{"_id":"themes/icarus/LICENSE","hash":"86037e5335a49321fa73b7815cab542057fac944","modified":1722343122654},{"_id":"themes/icarus/README.md","hash":"32f9f4fc8cd7ec60b30544bd2e558b593519ae5d","modified":1722343122654},{"_id":"themes/icarus/.github/dependabot.yml","hash":"d532d0db30e42211f35823b9885f3ed1b2d51777","modified":1722343122652},{"_id":"themes/icarus/package.json","hash":"f5bf0acf4fee3b57046e0be507d2d324e2b8805f","modified":1735486391074},{"_id":"themes/icarus/include/config.js","hash":"4b8a3096137e0d879fb17972a69630bde38d8212","modified":1722343122654},{"_id":"themes/icarus/include/register.js","hash":"040fed1d0d7e4d8003446d1541bc15a2c4b4e500","modified":1722343122656},{"_id":"themes/icarus/.github/stale.yml","hash":"88c73f6216c5666d2f60b1e8fe690a3f6e561e42","modified":1722343122652},{"_id":"themes/icarus/include/dependency.js","hash":"e02471f80db87db43aa7d527176e195b60dc4b99","modified":1722343122655},{"_id":"themes/icarus/languages/de.yml","hash":"78421f09961ca0b24756a0688fb2cb2e2696e25f","modified":1722343122668},{"_id":"themes/icarus/languages/es.yml","hash":"38579b8fad4b6997362acc770615bcd85ff20f68","modified":1722343122669},{"_id":"themes/icarus/languages/fr.yml","hash":"b992b68705f5050a99de926525b3cb40d95c4769","modified":1722343122669},{"_id":"themes/icarus/languages/it.yml","hash":"b76999994cda6b08b53d34c3dd67947f164de655","modified":1722343122670},{"_id":"themes/icarus/languages/en.yml","hash":"3d674204d9f723c829226da745afddd180c1131d","modified":1722343122669},{"_id":"themes/icarus/languages/id.yml","hash":"5e48b1d62378cadeb64b88349477726a5c1bae47","modified":1722343122670},{"_id":"themes/icarus/languages/ko.yml","hash":"e3374265377809c1518114cf352b595840c0b416","modified":1722343122670},{"_id":"themes/icarus/languages/pl.yml","hash":"2e7debb44cd91096f30efc87bf8d6b1d0d0214c9","modified":1722343122671},{"_id":"themes/icarus/languages/ja.yml","hash":"801d9930fef48d6a3f80470d5bed4f3eb78147e6","modified":1722343122670},{"_id":"themes/icarus/languages/pt-BR.yml","hash":"ee8f73350e4c6e2f63b7fc72b34472a6b1e21244","modified":1722343122671},{"_id":"themes/icarus/languages/sv.yml","hash":"b12eee168c52aac855ffce9f78fe5fd5d6e3970c","modified":1722343122671},{"_id":"themes/icarus/languages/ru.yml","hash":"9d91358c2acbe7a0f2a25daf7f65b999ff32d068","modified":1722343122671},{"_id":"themes/icarus/languages/tk.yml","hash":"ca583168bd2025124a1cd0e977da475d7a7496fd","modified":1722343122671},{"_id":"themes/icarus/languages/tr.yml","hash":"dd0a7bfe14848d6e1aa229198fe1db03e08e305e","modified":1722343122672},{"_id":"themes/icarus/languages/zh-CN.yml","hash":"02475ba14afc70dfeaf5678467cee307835e4efa","modified":1722343122672},{"_id":"themes/icarus/languages/zh-TW.yml","hash":"a6826e0c8cdb9ad286324b682b466a9e2ad78e6f","modified":1722343122672},{"_id":"themes/icarus/languages/vn.yml","hash":"5f2fffa642110c81d8f529949711c9d19ad6bbbe","modified":1722343122672},{"_id":"themes/icarus/layout/category.jsx","hash":"2313be8301011d218830b853b294b022ce81b423","modified":1735443230745},{"_id":"themes/icarus/layout/archive.jsx","hash":"daf8eca64197709a9dc4a4792c403a32d78bdfae","modified":1722343122673},{"_id":"themes/icarus/layout/categories.jsx","hash":"b8ad43e28a4990d222bfbb95b032f88555492347","modified":1722343122673},{"_id":"themes/icarus/layout/index.jsx","hash":"0a84a2348394fa9fc5080dd396bd28d357594f47","modified":1722343122676},{"_id":"themes/icarus/layout/page.jsx","hash":"d26c2db57e5a88d6483a03aeb51cda9d191d8cea","modified":1722343122677},{"_id":"themes/icarus/scripts/index.js","hash":"93a79969c7eb47cfac097893cda36368db56902c","modified":1722343122679},{"_id":"themes/icarus/layout/layout.jsx","hash":"b66a1f94af79c69e3feb6080657fcf9954b95b0c","modified":1722354804886},{"_id":"themes/icarus/layout/post.jsx","hash":"d26c2db57e5a88d6483a03aeb51cda9d191d8cea","modified":1722343122678},{"_id":"themes/icarus/layout/tag.jsx","hash":"a9a08c9f3eec8994d37149d1ab19f2b5b8f4cd2f","modified":1735443230746},{"_id":"themes/icarus/include/migration/head.js","hash":"7189efe33d18927d3790e8afb06642fb293b8603","modified":1722343122655},{"_id":"themes/icarus/layout/tags.jsx","hash":"2c42cb64778235dd220c563a27a92108ddc50cc4","modified":1722343122679},{"_id":"themes/icarus/include/migration/v2_v3.js","hash":"a46da71c20fa9d73c1bac26fda77717abae1b308","modified":1722343122655},{"_id":"themes/icarus/include/migration/v3_v4.js","hash":"9faf2184d7fe87debfbe007f3fc9079dcbcafcfe","modified":1722343122655},{"_id":"themes/icarus/.github/ISSUE_TEMPLATE/bug_report.md","hash":"5d3abdc1a2a79ef9822865184eced6e31066d8f6","modified":1722343122650},{"_id":"themes/icarus/include/migration/v4_v5.js","hash":"6342310892d113763b5544789b45d44c0ccf2854","modified":1722343122656},{"_id":"themes/icarus/.github/ISSUE_TEMPLATE/Bug反馈.md","hash":"d801be6937df21e63113be8840b2e23c465db87b","modified":1722343122650},{"_id":"themes/icarus/include/migration/v5_v5.1.js","hash":"073f22bd16e34b56f016633b1676dab2e7d8843d","modified":1722343122656},{"_id":"themes/icarus/.github/workflows/github-release.yml","hash":"d9830273e7e23c4151b10840f131f0b78b961bae","modified":1722343122653},{"_id":"themes/icarus/.github/ISSUE_TEMPLATE/功能建议.md","hash":"c6f60f37e6cd0bc21a81b3b07f84e04e9e80fb57","modified":1722343122651},{"_id":"themes/icarus/.github/ISSUE_TEMPLATE/config.yml","hash":"b49270a202d839c298e584b5d017f56140c7e7a0","modified":1722343122651},{"_id":"themes/icarus/.github/ISSUE_TEMPLATE/feature_request.md","hash":"05313e241a3d43fdadb0f74390b562c07c25d4d0","modified":1722343122651},{"_id":"themes/icarus/.github/workflows/lint.yml","hash":"17d374bf92867a67b15d657c2d41f8e4f9271102","modified":1722343122653},{"_id":"themes/icarus/.github/workflows/npm-publish.yml","hash":"de1ac56ec6888aaeb5db81d94693248b3467e4f6","modified":1722343122653},{"_id":"themes/icarus/.github/workflows/test.yml","hash":"f24e60941bf49b124dfc6a8b6c194da4c62abc2f","modified":1722343122653},{"_id":"themes/icarus/.github/PULL_REQUEST_TEMPLATE/pull_request_template.md","hash":"e106fa240c24c8bfbdd623549651600c6d786c9c","modified":1722343122652},{"_id":"themes/icarus/include/style/button.styl","hash":"0fb35b4786be1b387c751fa2849bc71523fcedd4","modified":1722343122665},{"_id":"themes/icarus/include/style/article.styl","hash":"105c983871b6c9148d97a0f756886e56411572bd","modified":1722343122664},{"_id":"themes/icarus/include/util/console.js","hash":"59cf9d277d3ac85a496689bd811b1c316001641d","modified":1722343122668},{"_id":"themes/icarus/include/style/base.styl","hash":"2bca6ad099949d52236c87db8db1002ffb99774c","modified":1722343122664},{"_id":"themes/icarus/include/style/card.styl","hash":"f78674422eb408cd17c17bbdc3ee1ebe4a453e05","modified":1722343122665},{"_id":"themes/icarus/include/style/codeblock.styl","hash":"ec54dc24eb4d9802d8fefc44c210558bc1641109","modified":1722343122666},{"_id":"themes/icarus/include/style/donate.styl","hash":"8d0af00628c13134b5f30a558608e7bebf18c2ec","modified":1722343122666},{"_id":"themes/icarus/include/style/footer.styl","hash":"a4ad715dee38b249538ac6cce94efc9b355a904b","modified":1722343122666},{"_id":"themes/icarus/include/style/helper.styl","hash":"9f3393e6122cc9f351091bfab960674e962da343","modified":1722343122666},{"_id":"themes/icarus/include/style/pagination.styl","hash":"b81bcd7ff915b4e9299533addc01bc4575ec35e3","modified":1722343122667},{"_id":"themes/icarus/include/style/plugin.styl","hash":"084843d5a522029e0f84a4fe791fbcb2cabd4c36","modified":1722343122667},{"_id":"themes/icarus/include/style/navbar.styl","hash":"34f09b144cb46a25ec2cc7260a6c207dd34ff1fe","modified":1722343122666},{"_id":"themes/icarus/include/style/responsive.styl","hash":"207083fe287612cddee6608b541861b14ac8de81","modified":1722343122667},{"_id":"themes/icarus/include/style/search.styl","hash":"416737e1da4e7e907bd03609b0fee9e2aacfe56c","modified":1722343122667},{"_id":"themes/icarus/include/style/widget.styl","hash":"c746902251136544eb3fe523235b3183f4189460","modified":1722343122668},{"_id":"themes/icarus/include/style/timeline.styl","hash":"ea61798a09bffdda07efb93c2ff800b63bddc4c4","modified":1722343122668},{"_id":"themes/icarus/include/schema/config.json","hash":"3186ad55b3b4592abac10252ce383c275d878700","modified":1722354804881},{"_id":"themes/icarus/layout/common/article.jsx","hash":"3cd424087a389d268adebe6078b4b19ebbaa5340","modified":1722354804883},{"_id":"themes/icarus/layout/common/footer.jsx","hash":"59ec3829b84fd1a6a4ec452acde9472c874aba6b","modified":1722354804884},{"_id":"themes/icarus/layout/common/head.jsx","hash":"bf783d5ef6d58924150472637c6c17782c83e102","modified":1722343122675},{"_id":"themes/icarus/layout/common/comment.jsx","hash":"76ee7c6687e96e6262985323665d6273a37e54c5","modified":1722343122674},{"_id":"themes/icarus/layout/common/donates.jsx","hash":"fd52330d582fd122db7f55444c2f3368ff4bd8d7","modified":1722343122674},{"_id":"themes/icarus/layout/common/plugins.jsx","hash":"2e27800b2a8a87112c96778db858c3419d890b79","modified":1722343122675},{"_id":"themes/icarus/layout/common/navbar.jsx","hash":"3e6914991b4332bb0a164cae5bf53b7962008acc","modified":1722354804885},{"_id":"themes/icarus/layout/common/search.jsx","hash":"1409627d98a92b4f5b2ab829f8e6b50b75d60e53","modified":1722343122675},{"_id":"themes/icarus/layout/common/scripts.jsx","hash":"5d07312406b401e8d4e9584b4d41ed7377993935","modified":1722343122675},{"_id":"themes/icarus/layout/common/widgets.jsx","hash":"7a89ac72a988d13b4714ab78a6dfd5cd8de85d47","modified":1722343122676},{"_id":"themes/icarus/layout/plugin/animejs.jsx","hash":"e2aa27c3501a58ef1e91e511557b77395c2c02aa","modified":1722343122677},{"_id":"themes/icarus/layout/common/share.jsx","hash":"0fad6f8a91bb5cf678b9ff2d66d2162d61625074","modified":1722343122676},{"_id":"themes/icarus/layout/plugin/pjax.jsx","hash":"65956102d5faabcedaaafb14b0201548f15e60ce","modified":1722343122677},{"_id":"themes/icarus/source/img/avatar.png","hash":"0d8236dcca871735500e9d06bbdbe0853ed6775b","modified":1722343122681},{"_id":"themes/icarus/source/img/og_image.png","hash":"b03f163096ca9c350ec962feee9836277b5c2509","modified":1722343122681},{"_id":"themes/icarus/layout/widget/profile.jsx","hash":"2322a2b24e63bfb44b2acfc07795435f8c89d511","modified":1735443230746},{"_id":"themes/icarus/source/img/favicon.svg","hash":"16fd847265845063a16596761cddb32926073dd2","modified":1722343122681},{"_id":"themes/icarus/source/img/razor-bottom-black.svg","hash":"a3eda07b1c605b456da9cdf335a1075db5e5d72c","modified":1722343122682},{"_id":"themes/icarus/source/img/logo.svg","hash":"87113c1f0d215c31245f5dcab3aa5df58e6aa5ee","modified":1722349594518},{"_id":"themes/icarus/source/img/razor-top-black.svg","hash":"201f1171a43ce667a39091fe47c0f278857f18f0","modified":1722343122682},{"_id":"themes/icarus/source/js/animation.js","hash":"0a8e361c353daa3194f4de3d646b96025d128e1a","modified":1722343122683},{"_id":"themes/icarus/layout/plugin/back_to_top.jsx","hash":"f86a0bae3a92bc07bd674f03a046fb1b6c1b48af","modified":1722343122677},{"_id":"themes/icarus/source/js/.eslintrc.json","hash":"6bf0641cb69dffac97f69baea192d7fa3ab612cb","modified":1722343122683},{"_id":"themes/icarus/source/js/column.js","hash":"0baee024ab67474c073a4c41b495f3e7f0df4505","modified":1722343122683},{"_id":"themes/icarus/source/js/back_to_top.js","hash":"d91f10c08c726135a13dfa1f422c49d8764ef03f","modified":1722343122683},{"_id":"themes/icarus/source/js/main.js","hash":"37f3b16fbd9668b9496d5f2d9bd9fb22fc6cee27","modified":1722343122684},{"_id":"themes/icarus/source/css/default.styl","hash":"b01da3028e5a1267a40aaae5c86a11187a2259e3","modified":1722343122680},{"_id":"themes/icarus/source/css/style.styl","hash":"efd5bdae679ec0bc6555d70d17b8770ae11b98a4","modified":1722354804887},{"_id":"themes/icarus/source/js/pjax.js","hash":"1c9921d4bd07795adc1d01a12c0fddf7d1124ca2","modified":1735443230748},{"_id":"themes/icarus/source/css/cyberpunk.styl","hash":"ae17d3528df0c3f089df14a06b7bd82f1bc5fed9","modified":1722343122680},{"_id":"themes/icarus/include/schema/common/donates.json","hash":"ae86e6f177bedf4afbe638502c12635027539305","modified":1722343122657},{"_id":"themes/icarus/include/schema/common/navbar.json","hash":"6691e587284c4cf450e0288680d5ff0f3565f090","modified":1722343122658},{"_id":"themes/icarus/include/schema/common/comment.json","hash":"265120b80df9808358df3ff7c4eada8a66512a4b","modified":1722343122657},{"_id":"themes/icarus/include/schema/common/article.json","hash":"e2502c39045c6a26ccd8e880858f93e78c7bda35","modified":1722343122657},{"_id":"themes/icarus/include/schema/common/footer.json","hash":"e85c9d7f2579805beb252a1b6345d5a668a13baa","modified":1722343122657},{"_id":"themes/icarus/include/schema/common/plugins.json","hash":"04c0738dc0a3ed89aecae2aee4ab60173f09e66b","modified":1722343122658},{"_id":"themes/icarus/include/schema/common/head.json","hash":"98889f059c635e6bdbd51effd04cf1cf44968a66","modified":1722343122657},{"_id":"themes/icarus/include/schema/common/providers.json","hash":"97ec953d497fb53594227ae98acaef8a8baa91da","modified":1722343122658},{"_id":"themes/icarus/include/schema/common/share.json","hash":"cf4f9ff4fb27c3541b35f57db355c228fa6873e4","modified":1722343122658},{"_id":"themes/icarus/include/schema/common/search.json","hash":"985fbcbf47054af714ead1a124869d54f2a8b607","modified":1722343122658},{"_id":"themes/icarus/include/schema/common/widgets.json","hash":"cadd9dc942740ecd5037d3943e72f8b6a8399bbe","modified":1722343122659},{"_id":"themes/icarus/include/schema/common/sidebar.json","hash":"eb241beaec4c73e3085dfb3139ce72e827e20549","modified":1722343122659},{"_id":"themes/icarus/include/schema/widget/profile.json","hash":"690ee1b0791cab47ea03cf42b5b4932ed2aa5675","modified":1722343122664},{"_id":"themes/icarus/include/schema/plugin/back_to_top.json","hash":"dc0febab7e7b67075d0ad3f80f5ec8b798b68dea","modified":1722343122661},{"_id":"themes/icarus/include/schema/plugin/animejs.json","hash":"e62ab6e20bd8862efa1ed32e7c0db0f8acbcfdec","modified":1722343122660},{"_id":"themes/icarus/include/schema/plugin/pjax.json","hash":"1f6218016569eb9cd354a06a9537c7110efb5f17","modified":1722343122661},{"_id":"themes/icarus/source/img/favicon.ico","hash":"ed1f3c74e54fb4c2d8ccd843cb7110917dc58535","modified":1722348217072},{"_id":"themes/icarus/.DS_Store","hash":"b2f2ec488f6ec84f79d4dcb4c2c2439bf0e5daba","modified":1722348389639},{"_id":"themes/icarus/source/.DS_Store","hash":"fa31da7052ba0aef43d486221a33e2474f01626a","modified":1722348389638},{"_id":"themes/icarus/source/img/favicon.png","hash":"cad785cdc11fcdd88afb1ae19cb001543f3bf3f5","modified":1722315752000},{"_id":"themes/icarus/source/img/logo.png","hash":"d40e9a4a865f1358e98b49554f33b73378197f71","modified":1722349683000},{"_id":"themes/icarus/source/js/imaegoo/night.js","hash":"ee9267b31315bd80a58a80cda99b1e4d0d49d0f9","modified":1722354804888},{"_id":"themes/icarus/source/js/imaegoo/universe.js","hash":"8dc3bd0b57cd84f01943a9992ebd11b3649340df","modified":1722354804888},{"_id":"themes/icarus/source/css/night.styl","hash":"261d3208183dc387c0ee2627ea0fd7b0eb417b4d","modified":1722354804886},{"_id":"themes/icarus/source/img/me.MP.jpg","hash":"09ab0abf391a1db046feace08f3e8ea6c93c8368","modified":1722356776725},{"_id":"public/js/algolia.js","hash":"a8df0c0abeeb4ee1d2d720161f3aea7339380704","modified":1735608800822},{"_id":"public/js/google_cse.js","hash":"1a9881669dfdeb2b3214074eee0d3e01e52db2c4","modified":1735608800822},{"_id":"public/js/insight.js","hash":"86bbdb7305d9bf19ad62d2ca2cf169fc8d9f9d31","modified":1735608800822},{"_id":"public/js/toc.js","hash":"da6fb757a1b083b8ed138bf29aad3a7bf8ec4f11","modified":1735608800822},{"_id":"public/content.json","hash":"9f62c0bf981c68e301c6a8e488116d942dfb598e","modified":1735621445322},{"_id":"public/manifest.json","hash":"af662fb1f47a081376182ae79d81110a8c172dcb","modified":1735608800822},{"_id":"public/1970/01/01/hello-world/index.html","hash":"99908b22ea2cc744924162a93c4853c96fbb1864","modified":1722357646144},{"_id":"public/archives/index.html","hash":"85a44dad14aa7634017d89aa813d4d9640dce024","modified":1735612886741},{"_id":"public/archives/1970/index.html","hash":"00524fcd54b2ca0102d7783cab7cca51f2d4b4a5","modified":1722357646144},{"_id":"public/archives/1970/01/index.html","hash":"ca1ac92314216e1c8f30f918e000b655399c0478","modified":1722357646144},{"_id":"public/index.html","hash":"b19dfd4518acc7c861671be5ccc00160e5143316","modified":1735621445322},{"_id":"public/categories/index.html","hash":"66c1eed70883c5a66a8150a8838614562987f868","modified":1735612886741},{"_id":"public/tags/index.html","hash":"7d6344dfbc6d30da729740862aea80039dfcd9aa","modified":1735612886741},{"_id":"public/img/avatar.png","hash":"0d8236dcca871735500e9d06bbdbe0853ed6775b","modified":1722357646144},{"_id":"public/img/razor-bottom-black.svg","hash":"a3eda07b1c605b456da9cdf335a1075db5e5d72c","modified":1735608745032},{"_id":"public/img/favicon.svg","hash":"16fd847265845063a16596761cddb32926073dd2","modified":1722357646144},{"_id":"public/img/razor-top-black.svg","hash":"201f1171a43ce667a39091fe47c0f278857f18f0","modified":1735608745032},{"_id":"public/img/favicon.png","hash":"cad785cdc11fcdd88afb1ae19cb001543f3bf3f5","modified":1735608745032},{"_id":"public/img/og_image.png","hash":"b03f163096ca9c350ec962feee9836277b5c2509","modified":1735608745032},{"_id":"public/img/logo.png","hash":"d40e9a4a865f1358e98b49554f33b73378197f71","modified":1735608745032},{"_id":"public/js/back_to_top.js","hash":"d91f10c08c726135a13dfa1f422c49d8764ef03f","modified":1735608745032},{"_id":"public/js/animation.js","hash":"0a8e361c353daa3194f4de3d646b96025d128e1a","modified":1735608745032},{"_id":"public/js/main.js","hash":"37f3b16fbd9668b9496d5f2d9bd9fb22fc6cee27","modified":1735608745032},{"_id":"public/js/column.js","hash":"0baee024ab67474c073a4c41b495f3e7f0df4505","modified":1735608745032},{"_id":"public/js/pjax.js","hash":"1c9921d4bd07795adc1d01a12c0fddf7d1124ca2","modified":1735608745032},{"_id":"public/css/cyberpunk.css","hash":"55e72b3ba10db4e2ddab31054f059481a44b394c","modified":1735608745032},{"_id":"public/css/style.css","hash":"eb45dd39efb661b9a79edf00877203b3de436a3e","modified":1735608745032},{"_id":"public/css/night.css","hash":"bee8a361e43d5589036e5d05633172dca584c039","modified":1735608745032},{"_id":"public/css/default.css","hash":"eb45dd39efb661b9a79edf00877203b3de436a3e","modified":1735608745032},{"_id":"public/js/imaegoo/night.js","hash":"ee9267b31315bd80a58a80cda99b1e4d0d49d0f9","modified":1735608745032},{"_id":"public/js/imaegoo/universe.js","hash":"8dc3bd0b57cd84f01943a9992ebd11b3649340df","modified":1735608745032},{"_id":"public/img/favicon.ico","hash":"ed1f3c74e54fb4c2d8ccd843cb7110917dc58535","modified":1722357646144},{"_id":"public/img/me.MP.jpg","hash":"09ab0abf391a1db046feace08f3e8ea6c93c8368","modified":1735608745032},{"_id":"public/img/logo.svg","hash":"87113c1f0d215c31245f5dcab3aa5df58e6aa5ee","modified":1722357646144},{"_id":"source/_posts/posix.md","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1735436566152},{"_id":"source/_posts/extending_autodoc.rst","hash":"d9d65a6f9fa62f23aa9f215d1c4308b927884ecd","modified":1723609564179},{"_id":"source/_posts/semaphores.md","hash":"cb0c52e434d151ab83b8fcf31b14284eff01ad61","modified":1735474512689},{"_id":"source/_posts/npm_force_install.md","hash":"a101d28e188bd6622171f96ecf3b8429331764d5","modified":1735471697936},{"_id":"source/_posts/lua.md","hash":"e37406540dbe5d4ed3a45ff8abbaab73efaa3dc3","modified":1734352777252},{"_id":"public/2024/12/15/lua/index.html","hash":"b75451d85598c643bdef182990c51d04183033d4","modified":1735612886741},{"_id":"public/2024/12/28/npm_force_install/index.html","hash":"002a1dd976a4d81bab0ccf0d1dc3c4be846e5ee8","modified":1735612886741},{"_id":"public/2024/10/15/hello-world/index.html","hash":"55f8711543e902f3d9f725c718f77d064fdb4d26","modified":1735612886741},{"_id":"public/2024/12/29/posix/index.html","hash":"13afa6f517d987a7c5006ba82dd02ab44ccbe217","modified":1735612886741},{"_id":"public/2024/10/15/semaphores/index.html","hash":"f65bdd4f978b7c2fbabee29030e3b2a248c9832c","modified":1735612886741},{"_id":"public/archives/2024/index.html","hash":"ab8bfe3825bfc3f88b4a66ea617bc391482f7cc0","modified":1735612886741},{"_id":"public/archives/2024/10/index.html","hash":"663505c4fa9c340885c8ee2ad8a9866111678ff3","modified":1735612886741},{"_id":"public/archives/2024/12/index.html","hash":"0fcb5c686cc4c75ed1fd03f67eeae126b9e06238","modified":1735612886741},{"_id":"public/tags/npm/index.html","hash":"01744b41f7c10f9ae40ee7a23ac3ce758684ae48","modified":1735621445322},{"_id":"public/tags/javascript/index.html","hash":"182133503fa69fff629e1a4f8145f5d75c516d5a","modified":1735612886741},{"_id":"public/tags/frontend/index.html","hash":"19c31e25bf8cffefbd611767c529e683b5935ca4","modified":1735612886741},{"_id":"public/categories/research/index.html","hash":"0c856a6f1b209fdd89d5c6713131d80bfd5e574d","modified":1735612886741},{"_id":"public/tags/lua/index.html","hash":"80a862dc9c801eda052822c4cb2eb0f7e499c430","modified":1735612886741},{"_id":"public/tags/scripting/index.html","hash":"1a299c2f40e1b986b8e9774ca5e0840140dfa4e4","modified":1735612886741},{"_id":"public/tags/concurrency/index.html","hash":"d0ee0310401004fdf5733c4e2d241b1b615812f5","modified":1735612886741},{"_id":"public/tags/programming/index.html","hash":"6445d65f0fc7807cd313a5ec01c6f373cab0b4a5","modified":1735612886741},{"_id":"public/tags/c/index.html","hash":"0153924bd4278ba60d4582d94a3dd32c51597ebc","modified":1735612886741},{"_id":"public/tags/linux/index.html","hash":"8266603eb3bbf28814f2f274b36dc136b2b3b5d9","modified":1735612886741},{"_id":"public/tags/macos/index.html","hash":"a309efa77d7bef9be6d2ade5cec1b34bb81194ae","modified":1735612886741},{"_id":"public/tags/synchronization/index.html","hash":"999e60bb3904dc30064f8013f13d0feecd8e6322","modified":1735612886741},{"_id":"public/tags/low-level/index.html","hash":"035f00f69a8bfae2747856f14559266b2c912409","modified":1735612886741},{"_id":"public/tags/posix/index.html","hash":"e5f1400cd86be097f1b639a5d004d45b60d4ab03","modified":1735612886741},{"_id":"source/_posts/npm_install.md","hash":"d36ac0ffe3d7e5a1082ac8773f703d6b00c3b201","modified":1735621441192},{"_id":"node_modules/hexo-theme-icarus/layout/comment/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1735608567569},{"_id":"node_modules/hexo-theme-icarus/layout/donate/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1735608567571},{"_id":"node_modules/hexo-theme-icarus/layout/misc/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1735608567572},{"_id":"node_modules/hexo-theme-icarus/layout/share/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1735608567576},{"_id":"node_modules/hexo-theme-icarus/layout/search/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1735608567574},{"_id":"node_modules/hexo-theme-icarus/include/schema/comment/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1735608567560},{"_id":"node_modules/hexo-theme-icarus/include/schema/donate/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1735608567563},{"_id":"node_modules/hexo-theme-icarus/include/schema/search/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1735608567567},{"_id":"node_modules/hexo-theme-icarus/include/schema/misc/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1735608567566},{"_id":"node_modules/hexo-theme-icarus/include/schema/share/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1735608567568},{"_id":"node_modules/hexo-theme-icarus/CONTRIBUTING.md","hash":"70254c6778c1e41bb2ff222bbf3a70b2239b9bc1","modified":1735608567795},{"_id":"node_modules/hexo-theme-icarus/package.json","hash":"f5bf0acf4fee3b57046e0be507d2d324e2b8805f","modified":1735608567778},{"_id":"node_modules/hexo-theme-icarus/README.md","hash":"32f9f4fc8cd7ec60b30544bd2e558b593519ae5d","modified":1735608567796},{"_id":"node_modules/hexo-theme-icarus/LICENSE","hash":"86037e5335a49321fa73b7815cab542057fac944","modified":1735608567578},{"_id":"node_modules/hexo-theme-icarus/include/config.js","hash":"4b8a3096137e0d879fb17972a69630bde38d8212","modified":1735608567742},{"_id":"node_modules/hexo-theme-icarus/include/dependency.js","hash":"e02471f80db87db43aa7d527176e195b60dc4b99","modified":1735608567744},{"_id":"node_modules/hexo-theme-icarus/layout/archive.jsx","hash":"daf8eca64197709a9dc4a4792c403a32d78bdfae","modified":1735608567784},{"_id":"node_modules/hexo-theme-icarus/include/register.js","hash":"040fed1d0d7e4d8003446d1541bc15a2c4b4e500","modified":1735608567751},{"_id":"node_modules/hexo-theme-icarus/layout/categories.jsx","hash":"b8ad43e28a4990d222bfbb95b032f88555492347","modified":1735608567785},{"_id":"node_modules/hexo-theme-icarus/layout/category.jsx","hash":"2313be8301011d218830b853b294b022ce81b423","modified":1735608567786},{"_id":"node_modules/hexo-theme-icarus/layout/layout.jsx","hash":"b66a1f94af79c69e3feb6080657fcf9954b95b0c","modified":1735608567790},{"_id":"node_modules/hexo-theme-icarus/layout/index.jsx","hash":"0a84a2348394fa9fc5080dd396bd28d357594f47","modified":1735608567789},{"_id":"node_modules/hexo-theme-icarus/layout/page.jsx","hash":"d26c2db57e5a88d6483a03aeb51cda9d191d8cea","modified":1735608567791},{"_id":"node_modules/hexo-theme-icarus/layout/tag.jsx","hash":"a9a08c9f3eec8994d37149d1ab19f2b5b8f4cd2f","modified":1735608567794},{"_id":"node_modules/hexo-theme-icarus/layout/tags.jsx","hash":"2c42cb64778235dd220c563a27a92108ddc50cc4","modified":1735608567795},{"_id":"node_modules/hexo-theme-icarus/layout/post.jsx","hash":"d26c2db57e5a88d6483a03aeb51cda9d191d8cea","modified":1735608567791},{"_id":"node_modules/hexo-theme-icarus/scripts/index.js","hash":"93a79969c7eb47cfac097893cda36368db56902c","modified":1735608567747},{"_id":"node_modules/hexo-theme-icarus/languages/en.yml","hash":"3d674204d9f723c829226da745afddd180c1131d","modified":1735608567827},{"_id":"node_modules/hexo-theme-icarus/languages/es.yml","hash":"38579b8fad4b6997362acc770615bcd85ff20f68","modified":1735608567827},{"_id":"node_modules/hexo-theme-icarus/languages/de.yml","hash":"78421f09961ca0b24756a0688fb2cb2e2696e25f","modified":1735608567826},{"_id":"node_modules/hexo-theme-icarus/languages/fr.yml","hash":"b992b68705f5050a99de926525b3cb40d95c4769","modified":1735608567828},{"_id":"node_modules/hexo-theme-icarus/languages/id.yml","hash":"5e48b1d62378cadeb64b88349477726a5c1bae47","modified":1735608567828},{"_id":"node_modules/hexo-theme-icarus/languages/it.yml","hash":"b76999994cda6b08b53d34c3dd67947f164de655","modified":1735608567829},{"_id":"node_modules/hexo-theme-icarus/languages/ja.yml","hash":"801d9930fef48d6a3f80470d5bed4f3eb78147e6","modified":1735608567829},{"_id":"node_modules/hexo-theme-icarus/languages/pl.yml","hash":"2e7debb44cd91096f30efc87bf8d6b1d0d0214c9","modified":1735608567830},{"_id":"node_modules/hexo-theme-icarus/languages/ko.yml","hash":"e3374265377809c1518114cf352b595840c0b416","modified":1735608567830},{"_id":"node_modules/hexo-theme-icarus/languages/ru.yml","hash":"9d91358c2acbe7a0f2a25daf7f65b999ff32d068","modified":1735608567831},{"_id":"node_modules/hexo-theme-icarus/languages/pt-BR.yml","hash":"ee8f73350e4c6e2f63b7fc72b34472a6b1e21244","modified":1735608567831},{"_id":"node_modules/hexo-theme-icarus/languages/vn.yml","hash":"5f2fffa642110c81d8f529949711c9d19ad6bbbe","modified":1735608567835},{"_id":"node_modules/hexo-theme-icarus/languages/sv.yml","hash":"b12eee168c52aac855ffce9f78fe5fd5d6e3970c","modified":1735608567832},{"_id":"node_modules/hexo-theme-icarus/languages/tk.yml","hash":"ca583168bd2025124a1cd0e977da475d7a7496fd","modified":1735608567832},{"_id":"node_modules/hexo-theme-icarus/languages/tr.yml","hash":"dd0a7bfe14848d6e1aa229198fe1db03e08e305e","modified":1735608567834},{"_id":"node_modules/hexo-theme-icarus/languages/zh-TW.yml","hash":"a6826e0c8cdb9ad286324b682b466a9e2ad78e6f","modified":1735608567836},{"_id":"node_modules/hexo-theme-icarus/languages/zh-CN.yml","hash":"02475ba14afc70dfeaf5678467cee307835e4efa","modified":1735608567836},{"_id":"node_modules/hexo-theme-icarus/include/migration/v2_v3.js","hash":"a46da71c20fa9d73c1bac26fda77717abae1b308","modified":1735608567752},{"_id":"node_modules/hexo-theme-icarus/include/migration/head.js","hash":"7189efe33d18927d3790e8afb06642fb293b8603","modified":1735608567747},{"_id":"node_modules/hexo-theme-icarus/include/schema/config.json","hash":"3186ad55b3b4592abac10252ce383c275d878700","modified":1735608567774},{"_id":"node_modules/hexo-theme-icarus/include/migration/v5_v5.1.js","hash":"073f22bd16e34b56f016633b1676dab2e7d8843d","modified":1735608567755},{"_id":"node_modules/hexo-theme-icarus/include/migration/v3_v4.js","hash":"9faf2184d7fe87debfbe007f3fc9079dcbcafcfe","modified":1735608567753},{"_id":"node_modules/hexo-theme-icarus/include/migration/v4_v5.js","hash":"6342310892d113763b5544789b45d44c0ccf2854","modified":1735608567754},{"_id":"node_modules/hexo-theme-icarus/include/util/console.js","hash":"59cf9d277d3ac85a496689bd811b1c316001641d","modified":1735608567744},{"_id":"node_modules/hexo-theme-icarus/include/style/base.styl","hash":"2bca6ad099949d52236c87db8db1002ffb99774c","modified":1735608567806},{"_id":"node_modules/hexo-theme-icarus/include/style/article.styl","hash":"105c983871b6c9148d97a0f756886e56411572bd","modified":1735608567805},{"_id":"node_modules/hexo-theme-icarus/include/style/button.styl","hash":"0fb35b4786be1b387c751fa2849bc71523fcedd4","modified":1735608567807},{"_id":"node_modules/hexo-theme-icarus/include/style/card.styl","hash":"f78674422eb408cd17c17bbdc3ee1ebe4a453e05","modified":1735608567808},{"_id":"node_modules/hexo-theme-icarus/include/style/codeblock.styl","hash":"ec54dc24eb4d9802d8fefc44c210558bc1641109","modified":1735608567808},{"_id":"node_modules/hexo-theme-icarus/include/style/navbar.styl","hash":"34f09b144cb46a25ec2cc7260a6c207dd34ff1fe","modified":1735608567821},{"_id":"node_modules/hexo-theme-icarus/include/style/donate.styl","hash":"8d0af00628c13134b5f30a558608e7bebf18c2ec","modified":1735608567820},{"_id":"node_modules/hexo-theme-icarus/include/style/helper.styl","hash":"9f3393e6122cc9f351091bfab960674e962da343","modified":1735608567820},{"_id":"node_modules/hexo-theme-icarus/include/style/footer.styl","hash":"a4ad715dee38b249538ac6cce94efc9b355a904b","modified":1735608567820},{"_id":"node_modules/hexo-theme-icarus/include/style/search.styl","hash":"416737e1da4e7e907bd03609b0fee9e2aacfe56c","modified":1735608567823},{"_id":"node_modules/hexo-theme-icarus/include/style/pagination.styl","hash":"b81bcd7ff915b4e9299533addc01bc4575ec35e3","modified":1735608567822},{"_id":"node_modules/hexo-theme-icarus/include/style/plugin.styl","hash":"084843d5a522029e0f84a4fe791fbcb2cabd4c36","modified":1735608567822},{"_id":"node_modules/hexo-theme-icarus/include/style/responsive.styl","hash":"207083fe287612cddee6608b541861b14ac8de81","modified":1735608567823},{"_id":"node_modules/hexo-theme-icarus/include/style/timeline.styl","hash":"ea61798a09bffdda07efb93c2ff800b63bddc4c4","modified":1735608567824},{"_id":"node_modules/hexo-theme-icarus/include/style/widget.styl","hash":"c746902251136544eb3fe523235b3183f4189460","modified":1735608567824},{"_id":"node_modules/hexo-theme-icarus/layout/common/article.jsx","hash":"3cd424087a389d268adebe6078b4b19ebbaa5340","modified":1735608567784},{"_id":"node_modules/hexo-theme-icarus/layout/common/comment.jsx","hash":"76ee7c6687e96e6262985323665d6273a37e54c5","modified":1735608567786},{"_id":"node_modules/hexo-theme-icarus/layout/common/donates.jsx","hash":"fd52330d582fd122db7f55444c2f3368ff4bd8d7","modified":1735608567787},{"_id":"node_modules/hexo-theme-icarus/layout/common/footer.jsx","hash":"59ec3829b84fd1a6a4ec452acde9472c874aba6b","modified":1735608567788},{"_id":"node_modules/hexo-theme-icarus/layout/common/head.jsx","hash":"bf783d5ef6d58924150472637c6c17782c83e102","modified":1735608567788},{"_id":"node_modules/hexo-theme-icarus/layout/common/navbar.jsx","hash":"3e6914991b4332bb0a164cae5bf53b7962008acc","modified":1735608567790},{"_id":"node_modules/hexo-theme-icarus/layout/common/plugins.jsx","hash":"2e27800b2a8a87112c96778db858c3419d890b79","modified":1735608567791},{"_id":"node_modules/hexo-theme-icarus/layout/common/scripts.jsx","hash":"5d07312406b401e8d4e9584b4d41ed7377993935","modified":1735608567792},{"_id":"node_modules/hexo-theme-icarus/layout/common/search.jsx","hash":"1409627d98a92b4f5b2ab829f8e6b50b75d60e53","modified":1735608567793},{"_id":"node_modules/hexo-theme-icarus/layout/common/share.jsx","hash":"0fad6f8a91bb5cf678b9ff2d66d2162d61625074","modified":1735608567794},{"_id":"node_modules/hexo-theme-icarus/layout/plugin/animejs.jsx","hash":"e2aa27c3501a58ef1e91e511557b77395c2c02aa","modified":1735608567783},{"_id":"node_modules/hexo-theme-icarus/layout/plugin/back_to_top.jsx","hash":"f86a0bae3a92bc07bd674f03a046fb1b6c1b48af","modified":1735608567785},{"_id":"node_modules/hexo-theme-icarus/layout/common/widgets.jsx","hash":"7a89ac72a988d13b4714ab78a6dfd5cd8de85d47","modified":1735608567795},{"_id":"node_modules/hexo-theme-icarus/layout/plugin/pjax.jsx","hash":"65956102d5faabcedaaafb14b0201548f15e60ce","modified":1735608567791},{"_id":"node_modules/hexo-theme-icarus/source/css/default.styl","hash":"b01da3028e5a1267a40aaae5c86a11187a2259e3","modified":1735608567819},{"_id":"node_modules/hexo-theme-icarus/layout/widget/profile.jsx","hash":"2322a2b24e63bfb44b2acfc07795435f8c89d511","modified":1735608567792},{"_id":"node_modules/hexo-theme-icarus/source/css/cyberpunk.styl","hash":"ae17d3528df0c3f089df14a06b7bd82f1bc5fed9","modified":1735608567818},{"_id":"node_modules/hexo-theme-icarus/source/css/night.styl","hash":"261d3208183dc387c0ee2627ea0fd7b0eb417b4d","modified":1735608567822},{"_id":"node_modules/hexo-theme-icarus/source/css/style.styl","hash":"efd5bdae679ec0bc6555d70d17b8770ae11b98a4","modified":1735608567824},{"_id":"node_modules/hexo-theme-icarus/source/img/favicon.png","hash":"cad785cdc11fcdd88afb1ae19cb001543f3bf3f5","modified":1735608567797},{"_id":"node_modules/hexo-theme-icarus/source/js/animation.js","hash":"0a8e361c353daa3194f4de3d646b96025d128e1a","modified":1735608567740},{"_id":"node_modules/hexo-theme-icarus/source/img/razor-top-black.svg","hash":"201f1171a43ce667a39091fe47c0f278857f18f0","modified":1735608567825},{"_id":"node_modules/hexo-theme-icarus/source/img/og_image.png","hash":"b03f163096ca9c350ec962feee9836277b5c2509","modified":1735608567804},{"_id":"node_modules/hexo-theme-icarus/source/img/razor-bottom-black.svg","hash":"a3eda07b1c605b456da9cdf335a1075db5e5d72c","modified":1735608567825},{"_id":"node_modules/hexo-theme-icarus/include/schema/common/comment.json","hash":"265120b80df9808358df3ff7c4eada8a66512a4b","modified":1735608567773},{"_id":"node_modules/hexo-theme-icarus/source/js/back_to_top.js","hash":"d91f10c08c726135a13dfa1f422c49d8764ef03f","modified":1735608567741},{"_id":"node_modules/hexo-theme-icarus/source/js/column.js","hash":"0baee024ab67474c073a4c41b495f3e7f0df4505","modified":1735608567742},{"_id":"node_modules/hexo-theme-icarus/include/schema/common/footer.json","hash":"e85c9d7f2579805beb252a1b6345d5a668a13baa","modified":1735608567776},{"_id":"node_modules/hexo-theme-icarus/include/schema/common/head.json","hash":"98889f059c635e6bdbd51effd04cf1cf44968a66","modified":1735608567777},{"_id":"node_modules/hexo-theme-icarus/include/schema/common/donates.json","hash":"ae86e6f177bedf4afbe638502c12635027539305","modified":1735608567775},{"_id":"node_modules/hexo-theme-icarus/include/schema/common/article.json","hash":"e2502c39045c6a26ccd8e880858f93e78c7bda35","modified":1735608567772},{"_id":"node_modules/hexo-theme-icarus/include/schema/common/navbar.json","hash":"6691e587284c4cf450e0288680d5ff0f3565f090","modified":1735608567778},{"_id":"node_modules/hexo-theme-icarus/include/schema/common/plugins.json","hash":"04c0738dc0a3ed89aecae2aee4ab60173f09e66b","modified":1735608567779},{"_id":"node_modules/hexo-theme-icarus/include/schema/common/providers.json","hash":"97ec953d497fb53594227ae98acaef8a8baa91da","modified":1735608567780},{"_id":"node_modules/hexo-theme-icarus/include/schema/common/search.json","hash":"985fbcbf47054af714ead1a124869d54f2a8b607","modified":1735608567781},{"_id":"node_modules/hexo-theme-icarus/include/schema/common/share.json","hash":"cf4f9ff4fb27c3541b35f57db355c228fa6873e4","modified":1735608567781},{"_id":"node_modules/hexo-theme-icarus/include/schema/common/widgets.json","hash":"cadd9dc942740ecd5037d3943e72f8b6a8399bbe","modified":1735608567782},{"_id":"node_modules/hexo-theme-icarus/include/schema/common/sidebar.json","hash":"eb241beaec4c73e3085dfb3139ce72e827e20549","modified":1735608567782},{"_id":"node_modules/hexo-theme-icarus/include/schema/plugin/animejs.json","hash":"e62ab6e20bd8862efa1ed32e7c0db0f8acbcfdec","modified":1735608567757},{"_id":"node_modules/hexo-theme-icarus/include/schema/plugin/back_to_top.json","hash":"dc0febab7e7b67075d0ad3f80f5ec8b798b68dea","modified":1735608567773},{"_id":"node_modules/hexo-theme-icarus/include/schema/plugin/pjax.json","hash":"1f6218016569eb9cd354a06a9537c7110efb5f17","modified":1735608567779},{"_id":"node_modules/hexo-theme-icarus/source/js/main.js","hash":"37f3b16fbd9668b9496d5f2d9bd9fb22fc6cee27","modified":1735608567749},{"_id":"node_modules/hexo-theme-icarus/source/js/pjax.js","hash":"1c9921d4bd07795adc1d01a12c0fddf7d1124ca2","modified":1735608567751},{"_id":"node_modules/hexo-theme-icarus/include/schema/widget/profile.json","hash":"690ee1b0791cab47ea03cf42b5b4932ed2aa5675","modified":1735608567780},{"_id":"node_modules/hexo-theme-icarus/source/js/imaegoo/night.js","hash":"ee9267b31315bd80a58a80cda99b1e4d0d49d0f9","modified":1735608567750},{"_id":"node_modules/hexo-theme-icarus/source/js/imaegoo/universe.js","hash":"8dc3bd0b57cd84f01943a9992ebd11b3649340df","modified":1735608567752},{"_id":"node_modules/hexo-theme-icarus/source/img/logo.png","hash":"d40e9a4a865f1358e98b49554f33b73378197f71","modified":1735608567801},{"_id":"node_modules/hexo-theme-icarus/source/img/me.MP.jpg","hash":"09ab0abf391a1db046feace08f3e8ea6c93c8368","modified":1735608567736},{"_id":"public/2024/12/30/npm_install/index.html","hash":"bc4de13a5cbdfa54af23c95fa931caa4742e6317","modified":1735621445322},{"_id":"public/categories/implementation/index.html","hash":"c603c9f87ae5d829665ec12c898df242c168e756","modified":1735621445322},{"_id":"public/tags/devops/index.html","hash":"5a8c2bd190a7ab46446ee6fc139b4d4bcc5a53dc","modified":1735621445322},{"_id":"public/tags/docker/index.html","hash":"34c7b6400a219238fcb54719857ed34c6217778c","modified":1735621445322}],"Category":[{"name":"research","_id":"cm59lims2000325qj9q75efup"},{"name":"implementation","_id":"cm5bslhlt00013foabbxkfg6m"}],"Data":[],"Page":[],"Post":[{"title":"Hello World","date":"2024-10-15T15:00:00.000Z","_content":"\nWelcome to my website! This is my first post, and it's going to be about how I set up this website: how I got the dependencies and how I was able to publish to github pages.\n\nGetting this website up and running required one night's worth of work. So, if you want to dot the same for your github page, here's how you can do it:\n\n## Getting dependencies and development container\n\n0. [hexo-icarus-theme](https://github.com/ppoffice/hexo-theme-icarus) is the main dependency of this site. To avoid accidentally breaking your website should the theme be updated *AND* for future customization-ility, we are going to fork the theme repo on Github and pull it locally.\n```\n# dont forget to fork on GH first\ngh repo clone <your-gh-username>/hexo-icarus-theme\n```\n\n1. Let's create a new repo to hold the website source tree. This will be the repo that you will push to Github Pages.\n```\nmkdir $USER.github.io\ncd $USER.github.io\ngit init\n```\nYou might want to change `$USER` to your Github user or organization name.\n\n2. Next is a Dockerfile that will build your site locally in a \"controlled environment\": no polluting your machine with node stuff, development isolation, etc\n```Dockerfile\n# Dockerfile\n\n## Base and dependencies\nFROM node:22.5.1-alpine3.19 AS base\nWORKDIR /workspace\nRUN npm install -g hexo-cli\n\n## Copy sources for build\nFROM base AS build\nCOPY . /workspace\nRUN hexo generate\n\n## Deploy\nFROM nginx:1.21.3-alpine\nCOPY --from=build /workspace/dist /usr/share/nginx/html\nEXPOSE 80\nCMD [\"nginx\", \"-g\", \"daemon off;\"]\n```\n\n3. Add a .devcontainer for development purposes (things might break and you might want to debug why)\n\n```yaml\n# .devcontainer/compose.yml\nservices:\n  web:\n    build:\n      context: .\n      dockerfile: Dockerfile\n    image: my-website-server\n    ports:\n      - \"80:80\"\n```\n\n4. You can now init the site, add icarus theme as a submodule, and start the server\n\n```bash\ndocker compose -f ./devcontainer/compose.yml up -d --build\ndocker compose -f ./devcontainer/compose.yml exec hexo init .\ngit submodule add https://github.com/<your-gh-username>/hexo-icarus-theme themes/icarus\n# you might need to run `npm install <some-packages>` to get things working\n# dont forget to set icarus as the theme in _config.yml\ndocker compose -f ./devcontainer/compose.yml exec hexo server\n```\n\n5. Get the [experimental dark theme](https://github.com/ppoffice/hexo-theme-icarus/issues/564) and apply it\n\n```bash\ncd themes/icarus\ngit checkout night4\ngit remote add imaegoo https://github.com/imaegoo/hexo-theme-icarus.git\ngit fetch imaegoo\ngit merge imaegoo/night4\n```\n\n6. add .gitignore for things like `node_modules` etc\n\n7. fix the `_config.yml` and `_config.icarus.yml` to your liking.\n\nMake sure to follow [icarus docs](https://ppoffice.github.io/hexo-theme-icarus/). For more information.\n\n## Deploying to Github Pages\n\nThe easiest way to deploy to Github pages is to follow the example from [deploy-pages action](https://github.com/actions/deploy-pages).\nCheckout my [workflow](https://github.com/wgkassem/wgkassem.github.io/blob/main/.github/workflows/pages.yml) for this website.\n\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\ndate: 2024-10-16\n---\n\nWelcome to my website! This is my first post, and it's going to be about how I set up this website: how I got the dependencies and how I was able to publish to github pages.\n\nGetting this website up and running required one night's worth of work. So, if you want to dot the same for your github page, here's how you can do it:\n\n## Getting dependencies and development container\n\n0. [hexo-icarus-theme](https://github.com/ppoffice/hexo-theme-icarus) is the main dependency of this site. To avoid accidentally breaking your website should the theme be updated *AND* for future customization-ility, we are going to fork the theme repo on Github and pull it locally.\n```\n# dont forget to fork on GH first\ngh repo clone <your-gh-username>/hexo-icarus-theme\n```\n\n1. Let's create a new repo to hold the website source tree. This will be the repo that you will push to Github Pages.\n```\nmkdir $USER.github.io\ncd $USER.github.io\ngit init\n```\nYou might want to change `$USER` to your Github user or organization name.\n\n2. Next is a Dockerfile that will build your site locally in a \"controlled environment\": no polluting your machine with node stuff, development isolation, etc\n```Dockerfile\n# Dockerfile\n\n## Base and dependencies\nFROM node:22.5.1-alpine3.19 AS base\nWORKDIR /workspace\nRUN npm install -g hexo-cli\n\n## Copy sources for build\nFROM base AS build\nCOPY . /workspace\nRUN hexo generate\n\n## Deploy\nFROM nginx:1.21.3-alpine\nCOPY --from=build /workspace/dist /usr/share/nginx/html\nEXPOSE 80\nCMD [\"nginx\", \"-g\", \"daemon off;\"]\n```\n\n3. Add a .devcontainer for development purposes (things might break and you might want to debug why)\n\n```yaml\n# .devcontainer/compose.yml\nservices:\n  web:\n    build:\n      context: .\n      dockerfile: Dockerfile\n    image: my-website-server\n    ports:\n      - \"80:80\"\n```\n\n4. You can now init the site, add icarus theme as a submodule, and start the server\n\n```bash\ndocker compose -f ./devcontainer/compose.yml up -d --build\ndocker compose -f ./devcontainer/compose.yml exec hexo init .\ngit submodule add https://github.com/<your-gh-username>/hexo-icarus-theme themes/icarus\n# you might need to run `npm install <some-packages>` to get things working\n# dont forget to set icarus as the theme in _config.yml\ndocker compose -f ./devcontainer/compose.yml exec hexo server\n```\n\n5. Get the [experimental dark theme](https://github.com/ppoffice/hexo-theme-icarus/issues/564) and apply it\n\n```bash\ncd themes/icarus\ngit checkout night4\ngit remote add imaegoo https://github.com/imaegoo/hexo-theme-icarus.git\ngit fetch imaegoo\ngit merge imaegoo/night4\n```\n\n6. add .gitignore for things like `node_modules` etc\n\n7. fix the `_config.yml` and `_config.icarus.yml` to your liking.\n\nMake sure to follow [icarus docs](https://ppoffice.github.io/hexo-theme-icarus/). For more information.\n\n## Deploying to Github Pages\n\nThe easiest way to deploy to Github pages is to follow the example from [deploy-pages action](https://github.com/actions/deploy-pages).\nCheckout my [workflow](https://github.com/wgkassem/wgkassem.github.io/blob/main/.github/workflows/pages.yml) for this website.\n\n","slug":"hello-world","published":1,"updated":"2024-10-16T09:54:17.119Z","_id":"clz8enf8d00003pqn6sssfl7l","comments":1,"layout":"post","photos":[],"content":"<p>Welcome to my website! This is my first post, and it’s going to be about how I set up this website: how I got the dependencies and how I was able to publish to github pages.</p>\n<p>Getting this website up and running required one night’s worth of work. So, if you want to dot the same for your github page, here’s how you can do it:</p>\n<h2 id=\"Getting-dependencies-and-development-container\"><a href=\"#Getting-dependencies-and-development-container\" class=\"headerlink\" title=\"Getting dependencies and development container\"></a>Getting dependencies and development container</h2><ol start=\"0\">\n<li><p><a href=\"https://github.com/ppoffice/hexo-theme-icarus\">hexo-icarus-theme</a> is the main dependency of this site. To avoid accidentally breaking your website should the theme be updated <em>AND</em> for future customization-ility, we are going to fork the theme repo on Github and pull it locally.</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># dont forget to fork on GH first</span><br><span class=\"line\">gh repo clone &lt;your-gh-username&gt;/hexo-icarus-theme</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Let’s create a new repo to hold the website source tree. This will be the repo that you will push to Github Pages.</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir $USER.github.io</span><br><span class=\"line\">cd $USER.github.io</span><br><span class=\"line\">git init</span><br></pre></td></tr></table></figure>\n<p>You might want to change <code>$USER</code> to your Github user or organization name.</p>\n</li>\n<li><p>Next is a Dockerfile that will build your site locally in a “controlled environment”: no polluting your machine with node stuff, development isolation, etc</p>\n<figure class=\"highlight dockerfile\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Dockerfile</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## Base and dependencies</span></span><br><span class=\"line\"><span class=\"keyword\">FROM</span> node:<span class=\"number\">22.5</span>.<span class=\"number\">1</span>-alpine3.<span class=\"number\">19</span> AS base</span><br><span class=\"line\"><span class=\"keyword\">WORKDIR</span><span class=\"language-bash\"> /workspace</span></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"language-bash\"> npm install -g hexo-cli</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## Copy sources for build</span></span><br><span class=\"line\"><span class=\"keyword\">FROM</span> base AS build</span><br><span class=\"line\"><span class=\"keyword\">COPY</span><span class=\"language-bash\"> . /workspace</span></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"language-bash\"> hexo generate</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## Deploy</span></span><br><span class=\"line\"><span class=\"keyword\">FROM</span> nginx:<span class=\"number\">1.21</span>.<span class=\"number\">3</span>-alpine</span><br><span class=\"line\"><span class=\"keyword\">COPY</span><span class=\"language-bash\"> --from=build /workspace/dist /usr/share/nginx/html</span></span><br><span class=\"line\"><span class=\"keyword\">EXPOSE</span> <span class=\"number\">80</span></span><br><span class=\"line\"><span class=\"keyword\">CMD</span><span class=\"language-bash\"> [<span class=\"string\">&quot;nginx&quot;</span>, <span class=\"string\">&quot;-g&quot;</span>, <span class=\"string\">&quot;daemon off;&quot;</span>]</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Add a .devcontainer for development purposes (things might break and you might want to debug why)</p>\n</li>\n</ol>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># .devcontainer/compose.yml</span></span><br><span class=\"line\"><span class=\"attr\">services:</span></span><br><span class=\"line\">  <span class=\"attr\">web:</span></span><br><span class=\"line\">    <span class=\"attr\">build:</span></span><br><span class=\"line\">      <span class=\"attr\">context:</span> <span class=\"string\">.</span></span><br><span class=\"line\">      <span class=\"attr\">dockerfile:</span> <span class=\"string\">Dockerfile</span></span><br><span class=\"line\">    <span class=\"attr\">image:</span> <span class=\"string\">my-website-server</span></span><br><span class=\"line\">    <span class=\"attr\">ports:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">&quot;80:80&quot;</span></span><br></pre></td></tr></table></figure>\n\n<ol start=\"4\">\n<li>You can now init the site, add icarus theme as a submodule, and start the server</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker compose -f ./devcontainer/compose.yml up -d --build</span><br><span class=\"line\">docker compose -f ./devcontainer/compose.yml <span class=\"built_in\">exec</span> hexo init .</span><br><span class=\"line\">git submodule add https://github.com/&lt;your-gh-username&gt;/hexo-icarus-theme themes/icarus</span><br><span class=\"line\"><span class=\"comment\"># you might need to run `npm install &lt;some-packages&gt;` to get things working</span></span><br><span class=\"line\"><span class=\"comment\"># dont forget to set icarus as the theme in _config.yml</span></span><br><span class=\"line\">docker compose -f ./devcontainer/compose.yml <span class=\"built_in\">exec</span> hexo server</span><br></pre></td></tr></table></figure>\n\n<ol start=\"5\">\n<li>Get the <a href=\"https://github.com/ppoffice/hexo-theme-icarus/issues/564\">experimental dark theme</a> and apply it</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> themes/icarus</span><br><span class=\"line\">git checkout night4</span><br><span class=\"line\">git remote add imaegoo https://github.com/imaegoo/hexo-theme-icarus.git</span><br><span class=\"line\">git fetch imaegoo</span><br><span class=\"line\">git merge imaegoo/night4</span><br></pre></td></tr></table></figure>\n\n<ol start=\"6\">\n<li><p>add .gitignore for things like <code>node_modules</code> etc</p>\n</li>\n<li><p>fix the <code>_config.yml</code> and <code>_config.icarus.yml</code> to your liking.</p>\n</li>\n</ol>\n<p>Make sure to follow <a href=\"https://ppoffice.github.io/hexo-theme-icarus/\">icarus docs</a>. For more information.</p>\n<h2 id=\"Deploying-to-Github-Pages\"><a href=\"#Deploying-to-Github-Pages\" class=\"headerlink\" title=\"Deploying to Github Pages\"></a>Deploying to Github Pages</h2><p>The easiest way to deploy to Github pages is to follow the example from <a href=\"https://github.com/actions/deploy-pages\">deploy-pages action</a>.<br>Checkout my <a href=\"https://github.com/wgkassem/wgkassem.github.io/blob/main/.github/workflows/pages.yml\">workflow</a> for this website.</p>\n","excerpt":"","more":"<p>Welcome to my website! This is my first post, and it’s going to be about how I set up this website: how I got the dependencies and how I was able to publish to github pages.</p>\n<p>Getting this website up and running required one night’s worth of work. So, if you want to dot the same for your github page, here’s how you can do it:</p>\n<h2 id=\"Getting-dependencies-and-development-container\"><a href=\"#Getting-dependencies-and-development-container\" class=\"headerlink\" title=\"Getting dependencies and development container\"></a>Getting dependencies and development container</h2><ol start=\"0\">\n<li><p><a href=\"https://github.com/ppoffice/hexo-theme-icarus\">hexo-icarus-theme</a> is the main dependency of this site. To avoid accidentally breaking your website should the theme be updated <em>AND</em> for future customization-ility, we are going to fork the theme repo on Github and pull it locally.</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># dont forget to fork on GH first</span><br><span class=\"line\">gh repo clone &lt;your-gh-username&gt;/hexo-icarus-theme</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Let’s create a new repo to hold the website source tree. This will be the repo that you will push to Github Pages.</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir $USER.github.io</span><br><span class=\"line\">cd $USER.github.io</span><br><span class=\"line\">git init</span><br></pre></td></tr></table></figure>\n<p>You might want to change <code>$USER</code> to your Github user or organization name.</p>\n</li>\n<li><p>Next is a Dockerfile that will build your site locally in a “controlled environment”: no polluting your machine with node stuff, development isolation, etc</p>\n<figure class=\"highlight dockerfile\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Dockerfile</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## Base and dependencies</span></span><br><span class=\"line\"><span class=\"keyword\">FROM</span> node:<span class=\"number\">22.5</span>.<span class=\"number\">1</span>-alpine3.<span class=\"number\">19</span> AS base</span><br><span class=\"line\"><span class=\"keyword\">WORKDIR</span><span class=\"language-bash\"> /workspace</span></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"language-bash\"> npm install -g hexo-cli</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## Copy sources for build</span></span><br><span class=\"line\"><span class=\"keyword\">FROM</span> base AS build</span><br><span class=\"line\"><span class=\"keyword\">COPY</span><span class=\"language-bash\"> . /workspace</span></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"language-bash\"> hexo generate</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## Deploy</span></span><br><span class=\"line\"><span class=\"keyword\">FROM</span> nginx:<span class=\"number\">1.21</span>.<span class=\"number\">3</span>-alpine</span><br><span class=\"line\"><span class=\"keyword\">COPY</span><span class=\"language-bash\"> --from=build /workspace/dist /usr/share/nginx/html</span></span><br><span class=\"line\"><span class=\"keyword\">EXPOSE</span> <span class=\"number\">80</span></span><br><span class=\"line\"><span class=\"keyword\">CMD</span><span class=\"language-bash\"> [<span class=\"string\">&quot;nginx&quot;</span>, <span class=\"string\">&quot;-g&quot;</span>, <span class=\"string\">&quot;daemon off;&quot;</span>]</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Add a .devcontainer for development purposes (things might break and you might want to debug why)</p>\n</li>\n</ol>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># .devcontainer/compose.yml</span></span><br><span class=\"line\"><span class=\"attr\">services:</span></span><br><span class=\"line\">  <span class=\"attr\">web:</span></span><br><span class=\"line\">    <span class=\"attr\">build:</span></span><br><span class=\"line\">      <span class=\"attr\">context:</span> <span class=\"string\">.</span></span><br><span class=\"line\">      <span class=\"attr\">dockerfile:</span> <span class=\"string\">Dockerfile</span></span><br><span class=\"line\">    <span class=\"attr\">image:</span> <span class=\"string\">my-website-server</span></span><br><span class=\"line\">    <span class=\"attr\">ports:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">&quot;80:80&quot;</span></span><br></pre></td></tr></table></figure>\n\n<ol start=\"4\">\n<li>You can now init the site, add icarus theme as a submodule, and start the server</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker compose -f ./devcontainer/compose.yml up -d --build</span><br><span class=\"line\">docker compose -f ./devcontainer/compose.yml <span class=\"built_in\">exec</span> hexo init .</span><br><span class=\"line\">git submodule add https://github.com/&lt;your-gh-username&gt;/hexo-icarus-theme themes/icarus</span><br><span class=\"line\"><span class=\"comment\"># you might need to run `npm install &lt;some-packages&gt;` to get things working</span></span><br><span class=\"line\"><span class=\"comment\"># dont forget to set icarus as the theme in _config.yml</span></span><br><span class=\"line\">docker compose -f ./devcontainer/compose.yml <span class=\"built_in\">exec</span> hexo server</span><br></pre></td></tr></table></figure>\n\n<ol start=\"5\">\n<li>Get the <a href=\"https://github.com/ppoffice/hexo-theme-icarus/issues/564\">experimental dark theme</a> and apply it</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> themes/icarus</span><br><span class=\"line\">git checkout night4</span><br><span class=\"line\">git remote add imaegoo https://github.com/imaegoo/hexo-theme-icarus.git</span><br><span class=\"line\">git fetch imaegoo</span><br><span class=\"line\">git merge imaegoo/night4</span><br></pre></td></tr></table></figure>\n\n<ol start=\"6\">\n<li><p>add .gitignore for things like <code>node_modules</code> etc</p>\n</li>\n<li><p>fix the <code>_config.yml</code> and <code>_config.icarus.yml</code> to your liking.</p>\n</li>\n</ol>\n<p>Make sure to follow <a href=\"https://ppoffice.github.io/hexo-theme-icarus/\">icarus docs</a>. For more information.</p>\n<h2 id=\"Deploying-to-Github-Pages\"><a href=\"#Deploying-to-Github-Pages\" class=\"headerlink\" title=\"Deploying to Github Pages\"></a>Deploying to Github Pages</h2><p>The easiest way to deploy to Github pages is to follow the example from <a href=\"https://github.com/actions/deploy-pages\">deploy-pages action</a>.<br>Checkout my <a href=\"https://github.com/wgkassem/wgkassem.github.io/blob/main/.github/workflows/pages.yml\">workflow</a> for this website.</p>\n"},{"_content":"","source":"_posts/posix.md","raw":"","slug":"posix","published":1,"date":"2024-12-29T01:42:46.152Z","updated":"2024-12-29T01:42:46.152Z","title":"","comments":1,"layout":"post","photos":[],"_id":"cm59limrw000025qj9oazf4x2","content":"","excerpt":"","more":""},{"title":"Force install npm dependencies","date":"2024-12-28T15:00:00.000Z","toc":true,"_content":"\nThe current website is based on [hexo](https://hexo.io) and [hexo-icarus-theme]().\nSince the icarus theme does not provide a \"night mode\" by dafault, I had to fork [imaegoo's night4 fork](https://github.com/imaegoo/hexo-theme-icarus/tree/night4).\n\nSince I am still not very proficient in frontend development, I rely on imaegoo to keep things up to date with the the upstream [ppoffice/hexo-theme-icarus](https://github.com/ppoffice/hexo-theme-icarus).\n\nThe following is a rundown of how the dependencies are managed in this project.\n\n1. I maintain [a fork](https://github.com/wgkassem/hexo-theme-icarus) of [imaegoo/hexo-theme-icarus](https://github.com/imaegoo/hexo-theme-icarus/tree/night4)\n2. The fork is synced with the upstream as often as possible.\n3. I use [my fork](https://github.com/wgkassem/hexo-theme-icarus) as a [git submodule](https://github.com/wgkassem/wgkassem.github.io/.gitmodules) in this project. The module is installed under ./themes/icarus in the source directory and copied via the [Dockerfile](https://github.com/wgkassem/wgkassem.github.io/blob/main/Dockerfile) to the final image. A Github Action mimics the docker file to build the site and push it to the gh-pages branch.\n\nRecently I noted that in some cases the `hexo generate` command would fail without the GH Action piping the failure. See [this action](https://github.com/wgkassem/wgkassem.github.io/actions/runs/12531513539/job/34949225435#step:6:24).\n","source":"_posts/npm_force_install.md","raw":"---\ntitle: Force install npm dependencies\ndate: 2024-12-29\ntoc: true\ntags: [npm, frontend, javascript]\ncategories: [research]\n---\n\nThe current website is based on [hexo](https://hexo.io) and [hexo-icarus-theme]().\nSince the icarus theme does not provide a \"night mode\" by dafault, I had to fork [imaegoo's night4 fork](https://github.com/imaegoo/hexo-theme-icarus/tree/night4).\n\nSince I am still not very proficient in frontend development, I rely on imaegoo to keep things up to date with the the upstream [ppoffice/hexo-theme-icarus](https://github.com/ppoffice/hexo-theme-icarus).\n\nThe following is a rundown of how the dependencies are managed in this project.\n\n1. I maintain [a fork](https://github.com/wgkassem/hexo-theme-icarus) of [imaegoo/hexo-theme-icarus](https://github.com/imaegoo/hexo-theme-icarus/tree/night4)\n2. The fork is synced with the upstream as often as possible.\n3. I use [my fork](https://github.com/wgkassem/hexo-theme-icarus) as a [git submodule](https://github.com/wgkassem/wgkassem.github.io/.gitmodules) in this project. The module is installed under ./themes/icarus in the source directory and copied via the [Dockerfile](https://github.com/wgkassem/wgkassem.github.io/blob/main/Dockerfile) to the final image. A Github Action mimics the docker file to build the site and push it to the gh-pages branch.\n\nRecently I noted that in some cases the `hexo generate` command would fail without the GH Action piping the failure. See [this action](https://github.com/wgkassem/wgkassem.github.io/actions/runs/12531513539/job/34949225435#step:6:24).\n","slug":"npm_force_install","published":1,"updated":"2024-12-29T11:28:17.936Z","comments":1,"layout":"post","photos":[],"_id":"cm59lims1000125qj4c7o2ygd","content":"<p>The current website is based on <a href=\"https://hexo.io/\">hexo</a> and <a href=\"\">hexo-icarus-theme</a>.<br>Since the icarus theme does not provide a “night mode” by dafault, I had to fork <a href=\"https://github.com/imaegoo/hexo-theme-icarus/tree/night4\">imaegoo’s night4 fork</a>.</p>\n<p>Since I am still not very proficient in frontend development, I rely on imaegoo to keep things up to date with the the upstream <a href=\"https://github.com/ppoffice/hexo-theme-icarus\">ppoffice&#x2F;hexo-theme-icarus</a>.</p>\n<p>The following is a rundown of how the dependencies are managed in this project.</p>\n<ol>\n<li>I maintain <a href=\"https://github.com/wgkassem/hexo-theme-icarus\">a fork</a> of <a href=\"https://github.com/imaegoo/hexo-theme-icarus/tree/night4\">imaegoo&#x2F;hexo-theme-icarus</a></li>\n<li>The fork is synced with the upstream as often as possible.</li>\n<li>I use <a href=\"https://github.com/wgkassem/hexo-theme-icarus\">my fork</a> as a <a href=\"https://github.com/wgkassem/wgkassem.github.io/.gitmodules\">git submodule</a> in this project. The module is installed under .&#x2F;themes&#x2F;icarus in the source directory and copied via the <a href=\"https://github.com/wgkassem/wgkassem.github.io/blob/main/Dockerfile\">Dockerfile</a> to the final image. A Github Action mimics the docker file to build the site and push it to the gh-pages branch.</li>\n</ol>\n<p>Recently I noted that in some cases the <code>hexo generate</code> command would fail without the GH Action piping the failure. See <a href=\"https://github.com/wgkassem/wgkassem.github.io/actions/runs/12531513539/job/34949225435#step:6:24\">this action</a>.</p>\n","excerpt":"","more":"<p>The current website is based on <a href=\"https://hexo.io/\">hexo</a> and <a href=\"\">hexo-icarus-theme</a>.<br>Since the icarus theme does not provide a “night mode” by dafault, I had to fork <a href=\"https://github.com/imaegoo/hexo-theme-icarus/tree/night4\">imaegoo’s night4 fork</a>.</p>\n<p>Since I am still not very proficient in frontend development, I rely on imaegoo to keep things up to date with the the upstream <a href=\"https://github.com/ppoffice/hexo-theme-icarus\">ppoffice&#x2F;hexo-theme-icarus</a>.</p>\n<p>The following is a rundown of how the dependencies are managed in this project.</p>\n<ol>\n<li>I maintain <a href=\"https://github.com/wgkassem/hexo-theme-icarus\">a fork</a> of <a href=\"https://github.com/imaegoo/hexo-theme-icarus/tree/night4\">imaegoo&#x2F;hexo-theme-icarus</a></li>\n<li>The fork is synced with the upstream as often as possible.</li>\n<li>I use <a href=\"https://github.com/wgkassem/hexo-theme-icarus\">my fork</a> as a <a href=\"https://github.com/wgkassem/wgkassem.github.io/.gitmodules\">git submodule</a> in this project. The module is installed under .&#x2F;themes&#x2F;icarus in the source directory and copied via the <a href=\"https://github.com/wgkassem/wgkassem.github.io/blob/main/Dockerfile\">Dockerfile</a> to the final image. A Github Action mimics the docker file to build the site and push it to the gh-pages branch.</li>\n</ol>\n<p>Recently I noted that in some cases the <code>hexo generate</code> command would fail without the GH Action piping the failure. See <a href=\"https://github.com/wgkassem/wgkassem.github.io/actions/runs/12531513539/job/34949225435#step:6:24\">this action</a>.</p>\n"},{"title":"dotfiles with Lua","date":"2024-12-15T15:00:00.000Z","_content":"\n## Why learn lua?\n\n1. Lua is a lightweight, high-level, multi-paradigm programming language designed primarily for embedded use in applications.\n2. Lua is very integrable with C and C++.\n3. Some major projects that use Lua include World of Warcraft, Adobe Lightroom, and Redis.\n4. Interesting history: Lua was created in 1993 by Roberto Ierusalimschy, Luiz Henrique de Figueiredo, and Waldemar Celes at the Pontifical Catholic University of Rio de Janeiro, Brazil because they needed a language that was powerful but also lightweight and *they could not import software*.\n5. It's functional, imperative, and object-oriented.\n6. I want to contribute and become a better neovim user.\n7. *Main reason*: improve installation of my [dotfiles](https://github.com/wgkassem/dotfiles) scripts.\n\n## Useful things:\n\n### Strings\n\n- Strings are immutable in Lua. Once a string is created, it cannot be changed.\n- Get the length of a string variable `var` with `#var`.\n- Concatenate strings with `..`. Example: `str1 = \"Hello\" .. \" \" .. \"World\"`.\n- Long strings can be created with double square brackets `[[ ]]`. This is useful for multi-line strings.\n","source":"_posts/lua.md","raw":"---\ntitle: dotfiles with Lua\ndate: 2024-12-16\ntags: [lua, scripting, programming]\n---\n\n## Why learn lua?\n\n1. Lua is a lightweight, high-level, multi-paradigm programming language designed primarily for embedded use in applications.\n2. Lua is very integrable with C and C++.\n3. Some major projects that use Lua include World of Warcraft, Adobe Lightroom, and Redis.\n4. Interesting history: Lua was created in 1993 by Roberto Ierusalimschy, Luiz Henrique de Figueiredo, and Waldemar Celes at the Pontifical Catholic University of Rio de Janeiro, Brazil because they needed a language that was powerful but also lightweight and *they could not import software*.\n5. It's functional, imperative, and object-oriented.\n6. I want to contribute and become a better neovim user.\n7. *Main reason*: improve installation of my [dotfiles](https://github.com/wgkassem/dotfiles) scripts.\n\n## Useful things:\n\n### Strings\n\n- Strings are immutable in Lua. Once a string is created, it cannot be changed.\n- Get the length of a string variable `var` with `#var`.\n- Concatenate strings with `..`. Example: `str1 = \"Hello\" .. \" \" .. \"World\"`.\n- Long strings can be created with double square brackets `[[ ]]`. This is useful for multi-line strings.\n","slug":"lua","published":1,"updated":"2024-12-16T12:39:37.252Z","comments":1,"layout":"post","photos":[],"_id":"cm59lims1000225qj0fd1biu3","content":"<h2 id=\"Why-learn-lua\"><a href=\"#Why-learn-lua\" class=\"headerlink\" title=\"Why learn lua?\"></a>Why learn lua?</h2><ol>\n<li>Lua is a lightweight, high-level, multi-paradigm programming language designed primarily for embedded use in applications.</li>\n<li>Lua is very integrable with C and C++.</li>\n<li>Some major projects that use Lua include World of Warcraft, Adobe Lightroom, and Redis.</li>\n<li>Interesting history: Lua was created in 1993 by Roberto Ierusalimschy, Luiz Henrique de Figueiredo, and Waldemar Celes at the Pontifical Catholic University of Rio de Janeiro, Brazil because they needed a language that was powerful but also lightweight and <em>they could not import software</em>.</li>\n<li>It’s functional, imperative, and object-oriented.</li>\n<li>I want to contribute and become a better neovim user.</li>\n<li><em>Main reason</em>: improve installation of my <a href=\"https://github.com/wgkassem/dotfiles\">dotfiles</a> scripts.</li>\n</ol>\n<h2 id=\"Useful-things\"><a href=\"#Useful-things\" class=\"headerlink\" title=\"Useful things:\"></a>Useful things:</h2><h3 id=\"Strings\"><a href=\"#Strings\" class=\"headerlink\" title=\"Strings\"></a>Strings</h3><ul>\n<li>Strings are immutable in Lua. Once a string is created, it cannot be changed.</li>\n<li>Get the length of a string variable <code>var</code> with <code>#var</code>.</li>\n<li>Concatenate strings with <code>..</code>. Example: <code>str1 = &quot;Hello&quot; .. &quot; &quot; .. &quot;World&quot;</code>.</li>\n<li>Long strings can be created with double square brackets <code>[[ ]]</code>. This is useful for multi-line strings.</li>\n</ul>\n","excerpt":"","more":"<h2 id=\"Why-learn-lua\"><a href=\"#Why-learn-lua\" class=\"headerlink\" title=\"Why learn lua?\"></a>Why learn lua?</h2><ol>\n<li>Lua is a lightweight, high-level, multi-paradigm programming language designed primarily for embedded use in applications.</li>\n<li>Lua is very integrable with C and C++.</li>\n<li>Some major projects that use Lua include World of Warcraft, Adobe Lightroom, and Redis.</li>\n<li>Interesting history: Lua was created in 1993 by Roberto Ierusalimschy, Luiz Henrique de Figueiredo, and Waldemar Celes at the Pontifical Catholic University of Rio de Janeiro, Brazil because they needed a language that was powerful but also lightweight and <em>they could not import software</em>.</li>\n<li>It’s functional, imperative, and object-oriented.</li>\n<li>I want to contribute and become a better neovim user.</li>\n<li><em>Main reason</em>: improve installation of my <a href=\"https://github.com/wgkassem/dotfiles\">dotfiles</a> scripts.</li>\n</ol>\n<h2 id=\"Useful-things\"><a href=\"#Useful-things\" class=\"headerlink\" title=\"Useful things:\"></a>Useful things:</h2><h3 id=\"Strings\"><a href=\"#Strings\" class=\"headerlink\" title=\"Strings\"></a>Strings</h3><ul>\n<li>Strings are immutable in Lua. Once a string is created, it cannot be changed.</li>\n<li>Get the length of a string variable <code>var</code> with <code>#var</code>.</li>\n<li>Concatenate strings with <code>..</code>. Example: <code>str1 = &quot;Hello&quot; .. &quot; &quot; .. &quot;World&quot;</code>.</li>\n<li>Long strings can be created with double square brackets <code>[[ ]]</code>. This is useful for multi-line strings.</li>\n</ul>\n"},{"title":"Semaphores","date":"2024-10-15T15:00:00.000Z","_content":"\n# Introduction\n\nSemaphores are a synchronization primitive that can be used to protect shared resources. They are used to control access to shared resources by multiple threads or processes.\n\n# Application\n\nA resource shared across threads or across processes, e.g. a shared memory space, a file (descriptor), or a network socket, and you need to ensure that no more\nthan 1-n threads (or processes) should access at a time. This is where [semaphores](https://en.wikipedia.org/wiki/Semaphore_%28programming%29) come in.\n\n# Mutex or Semaphore?\n\nA mutex on the other hand is there to ensure that no more than one thread can access (to read or write) a shared resource at a time. It is akin to a binary semaphore.\n\nHere's a comparison between the two as provided by ChatGPT:\n\n| Feature                | Semaphore                                            | Mutex                                                  |\n|------------------------|------------------------------------------------------|-------------------------------------------------------|\n| **Purpose**            | Controls access to resources, allowing multiple threads to access (counting semaphore) or one (binary semaphore). | Ensures mutual exclusion, allowing only one thread to access a critical section. |\n| **Counter**            | Maintains a count to track available resources.      | Binary state: locked or unlocked (no counter).        |\n| **Ownership**          | No ownership; any thread can signal (release) a semaphore. | Ownership is enforced; only the thread that locks it can unlock it. |\n| **Concurrency**        | Allows multiple threads to proceed if the counter is greater than 1 (in a counting semaphore). | Only one thread can proceed at a time.               |\n| **Blocking Behavior**  | Threads block if the counter is zero (no available resources). | Threads block if the mutex is locked.                |\n| **Use Cases**          | - Managing a pool of resources (e.g., thread pools, connection pools).<br>- Synchronizing producer-consumer workflows. | - Protecting critical sections.<br>- Ensuring exclusive access to shared data. |\n| **Types**              | - Binary semaphore (similar to a mutex).<br>- Counting semaphore (allows multiple threads). | Only one type (binary lock).                         |\n| **Risk of Deadlock**   | Higher risk if not used carefully (e.g., incorrect signaling order). | Lower risk due to strict ownership and locking rules. |\n| **Performance**        | Slightly slower due to additional counter operations and flexibility. | Slightly faster because it enforces strict mutual exclusion. |\n| **Platform Support**   | Available in most operating systems and threading libraries. | Available in most operating systems and threading libraries. |\n\n\nFor a very nice introduction to semaphores and their usage, [this post by Vikram Shukla](http://m.blog.chinaunix.net/uid-20341830-id-1701941.html) is a must-read.\n\n\n# POSIX Semaphores\n\n## Semaphore routines\n\nAn [overview of POSIX semaphore routines](https://man7.org/linux/man-pages/man7/sem_overview.7.html) is available via linux man pages.\n\n## Linux vs MacOS\n\nInterestingly, macOS does not support unnamed semaphores, [quora](https://www.quora.com/Why-does-OS-X-not-support-unnamed-semaphores).\nSo, if you are writing code that wants to comply with POSIX portability, you will need to use named semaphores.\n\n","source":"_posts/semaphores.md","raw":"---\ntitle: Semaphores\ndate: 2024-10-16\ntags: [concurrency, synchronization, low-level, c, c++, posix, linux, macos]\ncategories: [research]\n---\n\n# Introduction\n\nSemaphores are a synchronization primitive that can be used to protect shared resources. They are used to control access to shared resources by multiple threads or processes.\n\n# Application\n\nA resource shared across threads or across processes, e.g. a shared memory space, a file (descriptor), or a network socket, and you need to ensure that no more\nthan 1-n threads (or processes) should access at a time. This is where [semaphores](https://en.wikipedia.org/wiki/Semaphore_%28programming%29) come in.\n\n# Mutex or Semaphore?\n\nA mutex on the other hand is there to ensure that no more than one thread can access (to read or write) a shared resource at a time. It is akin to a binary semaphore.\n\nHere's a comparison between the two as provided by ChatGPT:\n\n| Feature                | Semaphore                                            | Mutex                                                  |\n|------------------------|------------------------------------------------------|-------------------------------------------------------|\n| **Purpose**            | Controls access to resources, allowing multiple threads to access (counting semaphore) or one (binary semaphore). | Ensures mutual exclusion, allowing only one thread to access a critical section. |\n| **Counter**            | Maintains a count to track available resources.      | Binary state: locked or unlocked (no counter).        |\n| **Ownership**          | No ownership; any thread can signal (release) a semaphore. | Ownership is enforced; only the thread that locks it can unlock it. |\n| **Concurrency**        | Allows multiple threads to proceed if the counter is greater than 1 (in a counting semaphore). | Only one thread can proceed at a time.               |\n| **Blocking Behavior**  | Threads block if the counter is zero (no available resources). | Threads block if the mutex is locked.                |\n| **Use Cases**          | - Managing a pool of resources (e.g., thread pools, connection pools).<br>- Synchronizing producer-consumer workflows. | - Protecting critical sections.<br>- Ensuring exclusive access to shared data. |\n| **Types**              | - Binary semaphore (similar to a mutex).<br>- Counting semaphore (allows multiple threads). | Only one type (binary lock).                         |\n| **Risk of Deadlock**   | Higher risk if not used carefully (e.g., incorrect signaling order). | Lower risk due to strict ownership and locking rules. |\n| **Performance**        | Slightly slower due to additional counter operations and flexibility. | Slightly faster because it enforces strict mutual exclusion. |\n| **Platform Support**   | Available in most operating systems and threading libraries. | Available in most operating systems and threading libraries. |\n\n\nFor a very nice introduction to semaphores and their usage, [this post by Vikram Shukla](http://m.blog.chinaunix.net/uid-20341830-id-1701941.html) is a must-read.\n\n\n# POSIX Semaphores\n\n## Semaphore routines\n\nAn [overview of POSIX semaphore routines](https://man7.org/linux/man-pages/man7/sem_overview.7.html) is available via linux man pages.\n\n## Linux vs MacOS\n\nInterestingly, macOS does not support unnamed semaphores, [quora](https://www.quora.com/Why-does-OS-X-not-support-unnamed-semaphores).\nSo, if you are writing code that wants to comply with POSIX portability, you will need to use named semaphores.\n\n","slug":"semaphores","published":1,"updated":"2024-12-29T12:15:12.689Z","comments":1,"layout":"post","photos":[],"_id":"cm59lims4000525qj6uf71cdy","content":"<h1 id=\"Introduction\"><a href=\"#Introduction\" class=\"headerlink\" title=\"Introduction\"></a>Introduction</h1><p>Semaphores are a synchronization primitive that can be used to protect shared resources. They are used to control access to shared resources by multiple threads or processes.</p>\n<h1 id=\"Application\"><a href=\"#Application\" class=\"headerlink\" title=\"Application\"></a>Application</h1><p>A resource shared across threads or across processes, e.g. a shared memory space, a file (descriptor), or a network socket, and you need to ensure that no more<br>than 1-n threads (or processes) should access at a time. This is where <a href=\"https://en.wikipedia.org/wiki/Semaphore_%28programming%29\">semaphores</a> come in.</p>\n<h1 id=\"Mutex-or-Semaphore\"><a href=\"#Mutex-or-Semaphore\" class=\"headerlink\" title=\"Mutex or Semaphore?\"></a>Mutex or Semaphore?</h1><p>A mutex on the other hand is there to ensure that no more than one thread can access (to read or write) a shared resource at a time. It is akin to a binary semaphore.</p>\n<p>Here’s a comparison between the two as provided by ChatGPT:</p>\n<table>\n<thead>\n<tr>\n<th>Feature</th>\n<th>Semaphore</th>\n<th>Mutex</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><strong>Purpose</strong></td>\n<td>Controls access to resources, allowing multiple threads to access (counting semaphore) or one (binary semaphore).</td>\n<td>Ensures mutual exclusion, allowing only one thread to access a critical section.</td>\n</tr>\n<tr>\n<td><strong>Counter</strong></td>\n<td>Maintains a count to track available resources.</td>\n<td>Binary state: locked or unlocked (no counter).</td>\n</tr>\n<tr>\n<td><strong>Ownership</strong></td>\n<td>No ownership; any thread can signal (release) a semaphore.</td>\n<td>Ownership is enforced; only the thread that locks it can unlock it.</td>\n</tr>\n<tr>\n<td><strong>Concurrency</strong></td>\n<td>Allows multiple threads to proceed if the counter is greater than 1 (in a counting semaphore).</td>\n<td>Only one thread can proceed at a time.</td>\n</tr>\n<tr>\n<td><strong>Blocking Behavior</strong></td>\n<td>Threads block if the counter is zero (no available resources).</td>\n<td>Threads block if the mutex is locked.</td>\n</tr>\n<tr>\n<td><strong>Use Cases</strong></td>\n<td>- Managing a pool of resources (e.g., thread pools, connection pools).<br>- Synchronizing producer-consumer workflows.</td>\n<td>- Protecting critical sections.<br>- Ensuring exclusive access to shared data.</td>\n</tr>\n<tr>\n<td><strong>Types</strong></td>\n<td>- Binary semaphore (similar to a mutex).<br>- Counting semaphore (allows multiple threads).</td>\n<td>Only one type (binary lock).</td>\n</tr>\n<tr>\n<td><strong>Risk of Deadlock</strong></td>\n<td>Higher risk if not used carefully (e.g., incorrect signaling order).</td>\n<td>Lower risk due to strict ownership and locking rules.</td>\n</tr>\n<tr>\n<td><strong>Performance</strong></td>\n<td>Slightly slower due to additional counter operations and flexibility.</td>\n<td>Slightly faster because it enforces strict mutual exclusion.</td>\n</tr>\n<tr>\n<td><strong>Platform Support</strong></td>\n<td>Available in most operating systems and threading libraries.</td>\n<td>Available in most operating systems and threading libraries.</td>\n</tr>\n</tbody></table>\n<p>For a very nice introduction to semaphores and their usage, <a href=\"http://m.blog.chinaunix.net/uid-20341830-id-1701941.html\">this post by Vikram Shukla</a> is a must-read.</p>\n<h1 id=\"POSIX-Semaphores\"><a href=\"#POSIX-Semaphores\" class=\"headerlink\" title=\"POSIX Semaphores\"></a>POSIX Semaphores</h1><h2 id=\"Semaphore-routines\"><a href=\"#Semaphore-routines\" class=\"headerlink\" title=\"Semaphore routines\"></a>Semaphore routines</h2><p>An <a href=\"https://man7.org/linux/man-pages/man7/sem_overview.7.html\">overview of POSIX semaphore routines</a> is available via linux man pages.</p>\n<h2 id=\"Linux-vs-MacOS\"><a href=\"#Linux-vs-MacOS\" class=\"headerlink\" title=\"Linux vs MacOS\"></a>Linux vs MacOS</h2><p>Interestingly, macOS does not support unnamed semaphores, <a href=\"https://www.quora.com/Why-does-OS-X-not-support-unnamed-semaphores\">quora</a>.<br>So, if you are writing code that wants to comply with POSIX portability, you will need to use named semaphores.</p>\n","excerpt":"","more":"<h1 id=\"Introduction\"><a href=\"#Introduction\" class=\"headerlink\" title=\"Introduction\"></a>Introduction</h1><p>Semaphores are a synchronization primitive that can be used to protect shared resources. They are used to control access to shared resources by multiple threads or processes.</p>\n<h1 id=\"Application\"><a href=\"#Application\" class=\"headerlink\" title=\"Application\"></a>Application</h1><p>A resource shared across threads or across processes, e.g. a shared memory space, a file (descriptor), or a network socket, and you need to ensure that no more<br>than 1-n threads (or processes) should access at a time. This is where <a href=\"https://en.wikipedia.org/wiki/Semaphore_%28programming%29\">semaphores</a> come in.</p>\n<h1 id=\"Mutex-or-Semaphore\"><a href=\"#Mutex-or-Semaphore\" class=\"headerlink\" title=\"Mutex or Semaphore?\"></a>Mutex or Semaphore?</h1><p>A mutex on the other hand is there to ensure that no more than one thread can access (to read or write) a shared resource at a time. It is akin to a binary semaphore.</p>\n<p>Here’s a comparison between the two as provided by ChatGPT:</p>\n<table>\n<thead>\n<tr>\n<th>Feature</th>\n<th>Semaphore</th>\n<th>Mutex</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><strong>Purpose</strong></td>\n<td>Controls access to resources, allowing multiple threads to access (counting semaphore) or one (binary semaphore).</td>\n<td>Ensures mutual exclusion, allowing only one thread to access a critical section.</td>\n</tr>\n<tr>\n<td><strong>Counter</strong></td>\n<td>Maintains a count to track available resources.</td>\n<td>Binary state: locked or unlocked (no counter).</td>\n</tr>\n<tr>\n<td><strong>Ownership</strong></td>\n<td>No ownership; any thread can signal (release) a semaphore.</td>\n<td>Ownership is enforced; only the thread that locks it can unlock it.</td>\n</tr>\n<tr>\n<td><strong>Concurrency</strong></td>\n<td>Allows multiple threads to proceed if the counter is greater than 1 (in a counting semaphore).</td>\n<td>Only one thread can proceed at a time.</td>\n</tr>\n<tr>\n<td><strong>Blocking Behavior</strong></td>\n<td>Threads block if the counter is zero (no available resources).</td>\n<td>Threads block if the mutex is locked.</td>\n</tr>\n<tr>\n<td><strong>Use Cases</strong></td>\n<td>- Managing a pool of resources (e.g., thread pools, connection pools).<br>- Synchronizing producer-consumer workflows.</td>\n<td>- Protecting critical sections.<br>- Ensuring exclusive access to shared data.</td>\n</tr>\n<tr>\n<td><strong>Types</strong></td>\n<td>- Binary semaphore (similar to a mutex).<br>- Counting semaphore (allows multiple threads).</td>\n<td>Only one type (binary lock).</td>\n</tr>\n<tr>\n<td><strong>Risk of Deadlock</strong></td>\n<td>Higher risk if not used carefully (e.g., incorrect signaling order).</td>\n<td>Lower risk due to strict ownership and locking rules.</td>\n</tr>\n<tr>\n<td><strong>Performance</strong></td>\n<td>Slightly slower due to additional counter operations and flexibility.</td>\n<td>Slightly faster because it enforces strict mutual exclusion.</td>\n</tr>\n<tr>\n<td><strong>Platform Support</strong></td>\n<td>Available in most operating systems and threading libraries.</td>\n<td>Available in most operating systems and threading libraries.</td>\n</tr>\n</tbody></table>\n<p>For a very nice introduction to semaphores and their usage, <a href=\"http://m.blog.chinaunix.net/uid-20341830-id-1701941.html\">this post by Vikram Shukla</a> is a must-read.</p>\n<h1 id=\"POSIX-Semaphores\"><a href=\"#POSIX-Semaphores\" class=\"headerlink\" title=\"POSIX Semaphores\"></a>POSIX Semaphores</h1><h2 id=\"Semaphore-routines\"><a href=\"#Semaphore-routines\" class=\"headerlink\" title=\"Semaphore routines\"></a>Semaphore routines</h2><p>An <a href=\"https://man7.org/linux/man-pages/man7/sem_overview.7.html\">overview of POSIX semaphore routines</a> is available via linux man pages.</p>\n<h2 id=\"Linux-vs-MacOS\"><a href=\"#Linux-vs-MacOS\" class=\"headerlink\" title=\"Linux vs MacOS\"></a>Linux vs MacOS</h2><p>Interestingly, macOS does not support unnamed semaphores, <a href=\"https://www.quora.com/Why-does-OS-X-not-support-unnamed-semaphores\">quora</a>.<br>So, if you are writing code that wants to comply with POSIX portability, you will need to use named semaphores.</p>\n"},{"title":"Reproducible builds with npm","description":"Fixing npm installs for Blog","date":"2024-12-30T15:00:00.000Z","_content":"\n## Background\n\nPreviously, we've been using a combination of `git submodule`, `npm install`, and `npm install --force` to build the blog. This has led to non-reproducible builds and a lot of confusion. Here's how we can fix it.\n\n## One: switch from `git submodule` to `npm` for theme package\n\nPreviously, we used `git submodule` to add the theme to the blog.\nThis caused some issues, as the theme was also a npm package with its own dependencies and build process. `hexo generate` would build them concurrently.\n\nWe added the theme [git repo to package.json](https://github.com/wgkassem/wgkassem.github.io/blob/main/package.json).\n\n\n## Two: switch from `npm install` to `npm ci` in base target\n\nCurrent blog is packaged with npm [1]: <https://docs.npmjs.com/about-packages-and-modules>. The base needs to provide the necessary dependencies for the blog to build.\n\nTwo files are important here:\n\n1. package.json: specifies the package name, version, and dependencies.\n2. package-lock.json\n\nWe *do not* want to use `npm install` here because:\n\n1. it does not delete `node_modules` tree.\n2. it modifies `package.json` if a new package is added.\n3. it generates `package-lock.json` to describe the exact tree that was generated.\n\nLeading to **non-reproducible** builds.\n\nFor instance, consider calling the following problematic Dockerfile \n\n```dockerfile\nFROM node:22.5.1-alpine3.19 AS base\n\nCOPY package.json package-lock.json /workspace/\nRUN npm install\n\nFROM base AS build\n\nCOPY . /workspace  # package*.json overwrite\nRUN npm run build\n```\n\nA correct `base` [Dockerfile](https://github.com/wgkassem/wgkassem.github.io/blob/main/Dockerfile) target is:\n\n```dockerfile\nFROM node:22.5.1-alpine3.19 AS base\n\nRUN apk add --no-cache git\nWORKDIR /workspace\nCOPY package.json /workspace/\nRUN npm ci\n```\n\n`npm ci` installs the exact dependencies listed in `package-lock.json` and does not modify `package.json` or `package-lock.json`.\n\n## Just build\n\nThe build target should not contain any `npm install` or `npm ci` commands. It should only contain the build command as everything *should* be installed in the base target.\n\n```dockerfile\nFROM base AS build\n\nCOPY . /workspace\nRUN npm run build\n```\n\n## Three: handling updates to `package.json` and `package-lock.json`\n\nThis required a little bit of creativity. Here's what we want to accomplish:\n\n1. A dev env a.k.a \"change, build, test\" workflow in \"real-time\".\n1. Avoid maintain two separate Dockerfiles.\n1. Allow changes to `package.json` and `package-lock.json` to git-commit.\n\n### The `dev` service\n\nFrom the `base` target, **mount** the source tree (instead of `COPY`). Ergo, the dev can/must run `npm install` / `npm ci` to update dependencies or node modules.\n\nThen `npm run build` to build the site with any new changes.\n\nThe service runs a persistent shell process.\n\n> [!NOTE]\n\nIf you wanted to use `docker` to re-build then you should probably use the prod target of the main Dockerfile instead.\n\n\n### The `serve` service\n\nSince we cannot now serve (i.e. run `nginx`) from the same container we are goingto use a separate service for that.\n\nThe serice as such binds to the source tree where `public/` is generated by `dev` service and runs nginx with default args.\n\n## Notes:\n\n1. `npm ci` disregards `node_modules`. Hence, using devcontainer will not affect production builds unless `package*.json` is/are updated.\n","source":"_posts/npm_install.md","raw":"---\ntitle: Reproducible builds with npm\ndescription: Fixing npm installs for Blog\ndate: 2024-12-31\ntags: [\"npm\", \"devops\", \"docker\"]\ncategories: [\"implementation\"]\n---\n\n## Background\n\nPreviously, we've been using a combination of `git submodule`, `npm install`, and `npm install --force` to build the blog. This has led to non-reproducible builds and a lot of confusion. Here's how we can fix it.\n\n## One: switch from `git submodule` to `npm` for theme package\n\nPreviously, we used `git submodule` to add the theme to the blog.\nThis caused some issues, as the theme was also a npm package with its own dependencies and build process. `hexo generate` would build them concurrently.\n\nWe added the theme [git repo to package.json](https://github.com/wgkassem/wgkassem.github.io/blob/main/package.json).\n\n\n## Two: switch from `npm install` to `npm ci` in base target\n\nCurrent blog is packaged with npm [1]: <https://docs.npmjs.com/about-packages-and-modules>. The base needs to provide the necessary dependencies for the blog to build.\n\nTwo files are important here:\n\n1. package.json: specifies the package name, version, and dependencies.\n2. package-lock.json\n\nWe *do not* want to use `npm install` here because:\n\n1. it does not delete `node_modules` tree.\n2. it modifies `package.json` if a new package is added.\n3. it generates `package-lock.json` to describe the exact tree that was generated.\n\nLeading to **non-reproducible** builds.\n\nFor instance, consider calling the following problematic Dockerfile \n\n```dockerfile\nFROM node:22.5.1-alpine3.19 AS base\n\nCOPY package.json package-lock.json /workspace/\nRUN npm install\n\nFROM base AS build\n\nCOPY . /workspace  # package*.json overwrite\nRUN npm run build\n```\n\nA correct `base` [Dockerfile](https://github.com/wgkassem/wgkassem.github.io/blob/main/Dockerfile) target is:\n\n```dockerfile\nFROM node:22.5.1-alpine3.19 AS base\n\nRUN apk add --no-cache git\nWORKDIR /workspace\nCOPY package.json /workspace/\nRUN npm ci\n```\n\n`npm ci` installs the exact dependencies listed in `package-lock.json` and does not modify `package.json` or `package-lock.json`.\n\n## Just build\n\nThe build target should not contain any `npm install` or `npm ci` commands. It should only contain the build command as everything *should* be installed in the base target.\n\n```dockerfile\nFROM base AS build\n\nCOPY . /workspace\nRUN npm run build\n```\n\n## Three: handling updates to `package.json` and `package-lock.json`\n\nThis required a little bit of creativity. Here's what we want to accomplish:\n\n1. A dev env a.k.a \"change, build, test\" workflow in \"real-time\".\n1. Avoid maintain two separate Dockerfiles.\n1. Allow changes to `package.json` and `package-lock.json` to git-commit.\n\n### The `dev` service\n\nFrom the `base` target, **mount** the source tree (instead of `COPY`). Ergo, the dev can/must run `npm install` / `npm ci` to update dependencies or node modules.\n\nThen `npm run build` to build the site with any new changes.\n\nThe service runs a persistent shell process.\n\n> [!NOTE]\n\nIf you wanted to use `docker` to re-build then you should probably use the prod target of the main Dockerfile instead.\n\n\n### The `serve` service\n\nSince we cannot now serve (i.e. run `nginx`) from the same container we are goingto use a separate service for that.\n\nThe serice as such binds to the source tree where `public/` is generated by `dev` service and runs nginx with default args.\n\n## Notes:\n\n1. `npm ci` disregards `node_modules`. Hence, using devcontainer will not affect production builds unless `package*.json` is/are updated.\n","slug":"npm_install","published":1,"updated":"2024-12-31T05:04:01.192Z","_id":"cm5bslhlp00003foa9z7ha0dk","comments":1,"layout":"post","photos":[],"content":"<h2 id=\"Background\"><a href=\"#Background\" class=\"headerlink\" title=\"Background\"></a>Background</h2><p>Previously, we’ve been using a combination of <code>git submodule</code>, <code>npm install</code>, and <code>npm install --force</code> to build the blog. This has led to non-reproducible builds and a lot of confusion. Here’s how we can fix it.</p>\n<h2 id=\"One-switch-from-git-submodule-to-npm-for-theme-package\"><a href=\"#One-switch-from-git-submodule-to-npm-for-theme-package\" class=\"headerlink\" title=\"One: switch from git submodule to npm for theme package\"></a>One: switch from <code>git submodule</code> to <code>npm</code> for theme package</h2><p>Previously, we used <code>git submodule</code> to add the theme to the blog.<br>This caused some issues, as the theme was also a npm package with its own dependencies and build process. <code>hexo generate</code> would build them concurrently.</p>\n<p>We added the theme <a href=\"https://github.com/wgkassem/wgkassem.github.io/blob/main/package.json\">git repo to package.json</a>.</p>\n<h2 id=\"Two-switch-from-npm-install-to-npm-ci-in-base-target\"><a href=\"#Two-switch-from-npm-install-to-npm-ci-in-base-target\" class=\"headerlink\" title=\"Two: switch from npm install to npm ci in base target\"></a>Two: switch from <code>npm install</code> to <code>npm ci</code> in base target</h2><p>Current blog is packaged with npm [1]: <a href=\"https://docs.npmjs.com/about-packages-and-modules\">https://docs.npmjs.com/about-packages-and-modules</a>. The base needs to provide the necessary dependencies for the blog to build.</p>\n<p>Two files are important here:</p>\n<ol>\n<li>package.json: specifies the package name, version, and dependencies.</li>\n<li>package-lock.json</li>\n</ol>\n<p>We <em>do not</em> want to use <code>npm install</code> here because:</p>\n<ol>\n<li>it does not delete <code>node_modules</code> tree.</li>\n<li>it modifies <code>package.json</code> if a new package is added.</li>\n<li>it generates <code>package-lock.json</code> to describe the exact tree that was generated.</li>\n</ol>\n<p>Leading to <strong>non-reproducible</strong> builds.</p>\n<p>For instance, consider calling the following problematic Dockerfile </p>\n<figure class=\"highlight dockerfile\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">FROM</span> node:<span class=\"number\">22.5</span>.<span class=\"number\">1</span>-alpine3.<span class=\"number\">19</span> AS base</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">COPY</span><span class=\"language-bash\"> package.json package-lock.json /workspace/</span></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"language-bash\"> npm install</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">FROM</span> base AS build</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">COPY</span><span class=\"language-bash\"> . /workspace  <span class=\"comment\"># package*.json overwrite</span></span></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"language-bash\"> npm run build</span></span><br></pre></td></tr></table></figure>\n\n<p>A correct <code>base</code> <a href=\"https://github.com/wgkassem/wgkassem.github.io/blob/main/Dockerfile\">Dockerfile</a> target is:</p>\n<figure class=\"highlight dockerfile\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">FROM</span> node:<span class=\"number\">22.5</span>.<span class=\"number\">1</span>-alpine3.<span class=\"number\">19</span> AS base</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"language-bash\"> apk add --no-cache git</span></span><br><span class=\"line\"><span class=\"keyword\">WORKDIR</span><span class=\"language-bash\"> /workspace</span></span><br><span class=\"line\"><span class=\"keyword\">COPY</span><span class=\"language-bash\"> package.json /workspace/</span></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"language-bash\"> npm ci</span></span><br></pre></td></tr></table></figure>\n\n<p><code>npm ci</code> installs the exact dependencies listed in <code>package-lock.json</code> and does not modify <code>package.json</code> or <code>package-lock.json</code>.</p>\n<h2 id=\"Just-build\"><a href=\"#Just-build\" class=\"headerlink\" title=\"Just build\"></a>Just build</h2><p>The build target should not contain any <code>npm install</code> or <code>npm ci</code> commands. It should only contain the build command as everything <em>should</em> be installed in the base target.</p>\n<figure class=\"highlight dockerfile\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">FROM</span> base AS build</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">COPY</span><span class=\"language-bash\"> . /workspace</span></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"language-bash\"> npm run build</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Three-handling-updates-to-package-json-and-package-lock-json\"><a href=\"#Three-handling-updates-to-package-json-and-package-lock-json\" class=\"headerlink\" title=\"Three: handling updates to package.json and package-lock.json\"></a>Three: handling updates to <code>package.json</code> and <code>package-lock.json</code></h2><p>This required a little bit of creativity. Here’s what we want to accomplish:</p>\n<ol>\n<li>A dev env a.k.a “change, build, test” workflow in “real-time”.</li>\n<li>Avoid maintain two separate Dockerfiles.</li>\n<li>Allow changes to <code>package.json</code> and <code>package-lock.json</code> to git-commit.</li>\n</ol>\n<h3 id=\"The-dev-service\"><a href=\"#The-dev-service\" class=\"headerlink\" title=\"The dev service\"></a>The <code>dev</code> service</h3><p>From the <code>base</code> target, <strong>mount</strong> the source tree (instead of <code>COPY</code>). Ergo, the dev can&#x2F;must run <code>npm install</code> &#x2F; <code>npm ci</code> to update dependencies or node modules.</p>\n<p>Then <code>npm run build</code> to build the site with any new changes.</p>\n<p>The service runs a persistent shell process.</p>\n<blockquote>\n<p>[!NOTE]</p>\n</blockquote>\n<p>If you wanted to use <code>docker</code> to re-build then you should probably use the prod target of the main Dockerfile instead.</p>\n<h3 id=\"The-serve-service\"><a href=\"#The-serve-service\" class=\"headerlink\" title=\"The serve service\"></a>The <code>serve</code> service</h3><p>Since we cannot now serve (i.e. run <code>nginx</code>) from the same container we are goingto use a separate service for that.</p>\n<p>The serice as such binds to the source tree where <code>public/</code> is generated by <code>dev</code> service and runs nginx with default args.</p>\n<h2 id=\"Notes\"><a href=\"#Notes\" class=\"headerlink\" title=\"Notes:\"></a>Notes:</h2><ol>\n<li><code>npm ci</code> disregards <code>node_modules</code>. Hence, using devcontainer will not affect production builds unless <code>package*.json</code> is&#x2F;are updated.</li>\n</ol>\n","excerpt":"","more":"<h2 id=\"Background\"><a href=\"#Background\" class=\"headerlink\" title=\"Background\"></a>Background</h2><p>Previously, we’ve been using a combination of <code>git submodule</code>, <code>npm install</code>, and <code>npm install --force</code> to build the blog. This has led to non-reproducible builds and a lot of confusion. Here’s how we can fix it.</p>\n<h2 id=\"One-switch-from-git-submodule-to-npm-for-theme-package\"><a href=\"#One-switch-from-git-submodule-to-npm-for-theme-package\" class=\"headerlink\" title=\"One: switch from git submodule to npm for theme package\"></a>One: switch from <code>git submodule</code> to <code>npm</code> for theme package</h2><p>Previously, we used <code>git submodule</code> to add the theme to the blog.<br>This caused some issues, as the theme was also a npm package with its own dependencies and build process. <code>hexo generate</code> would build them concurrently.</p>\n<p>We added the theme <a href=\"https://github.com/wgkassem/wgkassem.github.io/blob/main/package.json\">git repo to package.json</a>.</p>\n<h2 id=\"Two-switch-from-npm-install-to-npm-ci-in-base-target\"><a href=\"#Two-switch-from-npm-install-to-npm-ci-in-base-target\" class=\"headerlink\" title=\"Two: switch from npm install to npm ci in base target\"></a>Two: switch from <code>npm install</code> to <code>npm ci</code> in base target</h2><p>Current blog is packaged with npm [1]: <a href=\"https://docs.npmjs.com/about-packages-and-modules\">https://docs.npmjs.com/about-packages-and-modules</a>. The base needs to provide the necessary dependencies for the blog to build.</p>\n<p>Two files are important here:</p>\n<ol>\n<li>package.json: specifies the package name, version, and dependencies.</li>\n<li>package-lock.json</li>\n</ol>\n<p>We <em>do not</em> want to use <code>npm install</code> here because:</p>\n<ol>\n<li>it does not delete <code>node_modules</code> tree.</li>\n<li>it modifies <code>package.json</code> if a new package is added.</li>\n<li>it generates <code>package-lock.json</code> to describe the exact tree that was generated.</li>\n</ol>\n<p>Leading to <strong>non-reproducible</strong> builds.</p>\n<p>For instance, consider calling the following problematic Dockerfile </p>\n<figure class=\"highlight dockerfile\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">FROM</span> node:<span class=\"number\">22.5</span>.<span class=\"number\">1</span>-alpine3.<span class=\"number\">19</span> AS base</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">COPY</span><span class=\"language-bash\"> package.json package-lock.json /workspace/</span></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"language-bash\"> npm install</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">FROM</span> base AS build</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">COPY</span><span class=\"language-bash\"> . /workspace  <span class=\"comment\"># package*.json overwrite</span></span></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"language-bash\"> npm run build</span></span><br></pre></td></tr></table></figure>\n\n<p>A correct <code>base</code> <a href=\"https://github.com/wgkassem/wgkassem.github.io/blob/main/Dockerfile\">Dockerfile</a> target is:</p>\n<figure class=\"highlight dockerfile\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">FROM</span> node:<span class=\"number\">22.5</span>.<span class=\"number\">1</span>-alpine3.<span class=\"number\">19</span> AS base</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"language-bash\"> apk add --no-cache git</span></span><br><span class=\"line\"><span class=\"keyword\">WORKDIR</span><span class=\"language-bash\"> /workspace</span></span><br><span class=\"line\"><span class=\"keyword\">COPY</span><span class=\"language-bash\"> package.json /workspace/</span></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"language-bash\"> npm ci</span></span><br></pre></td></tr></table></figure>\n\n<p><code>npm ci</code> installs the exact dependencies listed in <code>package-lock.json</code> and does not modify <code>package.json</code> or <code>package-lock.json</code>.</p>\n<h2 id=\"Just-build\"><a href=\"#Just-build\" class=\"headerlink\" title=\"Just build\"></a>Just build</h2><p>The build target should not contain any <code>npm install</code> or <code>npm ci</code> commands. It should only contain the build command as everything <em>should</em> be installed in the base target.</p>\n<figure class=\"highlight dockerfile\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">FROM</span> base AS build</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">COPY</span><span class=\"language-bash\"> . /workspace</span></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"language-bash\"> npm run build</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Three-handling-updates-to-package-json-and-package-lock-json\"><a href=\"#Three-handling-updates-to-package-json-and-package-lock-json\" class=\"headerlink\" title=\"Three: handling updates to package.json and package-lock.json\"></a>Three: handling updates to <code>package.json</code> and <code>package-lock.json</code></h2><p>This required a little bit of creativity. Here’s what we want to accomplish:</p>\n<ol>\n<li>A dev env a.k.a “change, build, test” workflow in “real-time”.</li>\n<li>Avoid maintain two separate Dockerfiles.</li>\n<li>Allow changes to <code>package.json</code> and <code>package-lock.json</code> to git-commit.</li>\n</ol>\n<h3 id=\"The-dev-service\"><a href=\"#The-dev-service\" class=\"headerlink\" title=\"The dev service\"></a>The <code>dev</code> service</h3><p>From the <code>base</code> target, <strong>mount</strong> the source tree (instead of <code>COPY</code>). Ergo, the dev can&#x2F;must run <code>npm install</code> &#x2F; <code>npm ci</code> to update dependencies or node modules.</p>\n<p>Then <code>npm run build</code> to build the site with any new changes.</p>\n<p>The service runs a persistent shell process.</p>\n<blockquote>\n<p>[!NOTE]</p>\n</blockquote>\n<p>If you wanted to use <code>docker</code> to re-build then you should probably use the prod target of the main Dockerfile instead.</p>\n<h3 id=\"The-serve-service\"><a href=\"#The-serve-service\" class=\"headerlink\" title=\"The serve service\"></a>The <code>serve</code> service</h3><p>Since we cannot now serve (i.e. run <code>nginx</code>) from the same container we are goingto use a separate service for that.</p>\n<p>The serice as such binds to the source tree where <code>public/</code> is generated by <code>dev</code> service and runs nginx with default args.</p>\n<h2 id=\"Notes\"><a href=\"#Notes\" class=\"headerlink\" title=\"Notes:\"></a>Notes:</h2><ol>\n<li><code>npm ci</code> disregards <code>node_modules</code>. Hence, using devcontainer will not affect production builds unless <code>package*.json</code> is&#x2F;are updated.</li>\n</ol>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cm59lims1000125qj4c7o2ygd","category_id":"cm59lims2000325qj9q75efup","_id":"cm59lims5000825qjc5320xk4"},{"post_id":"cm59lims4000525qj6uf71cdy","category_id":"cm59lims2000325qj9q75efup","_id":"cm59lims6000a25qj1fm7abd7"},{"post_id":"cm5bslhlp00003foa9z7ha0dk","category_id":"cm5bslhlt00013foabbxkfg6m","_id":"cm5bslhlv00043foa4vep2kfz"}],"PostTag":[{"post_id":"cm59lims1000125qj4c7o2ygd","tag_id":"cm59lims3000425qj2caeerr4","_id":"cm59lims6000c25qj72e2eigu"},{"post_id":"cm59lims1000125qj4c7o2ygd","tag_id":"cm59lims4000725qj5jd703jw","_id":"cm59lims6000d25qjgli50lwf"},{"post_id":"cm59lims1000125qj4c7o2ygd","tag_id":"cm59lims5000925qja8ku8qbr","_id":"cm59lims6000f25qje3f61hho"},{"post_id":"cm59lims1000225qj0fd1biu3","tag_id":"cm59lims6000b25qj7b88baqa","_id":"cm59lims7000i25qj7jzcbcfz"},{"post_id":"cm59lims1000225qj0fd1biu3","tag_id":"cm59lims6000e25qjck7nf45w","_id":"cm59lims7000j25qj9ymhh2kq"},{"post_id":"cm59lims1000225qj0fd1biu3","tag_id":"cm59lims6000g25qj5wbjhsc7","_id":"cm59lims7000l25qjer8t752s"},{"post_id":"cm59lims4000525qj6uf71cdy","tag_id":"cm59lims6000h25qj7kk96d8j","_id":"cm59lims8000s25qj4oycbj1q"},{"post_id":"cm59lims4000525qj6uf71cdy","tag_id":"cm59lims7000k25qjhzba4od4","_id":"cm59lims8000t25qj7dk63bam"},{"post_id":"cm59lims4000525qj6uf71cdy","tag_id":"cm59lims7000m25qjg0ekelag","_id":"cm59lims8000u25qjhqloh5gm"},{"post_id":"cm59lims4000525qj6uf71cdy","tag_id":"cm59lims7000n25qj85job81j","_id":"cm59lims8000v25qj259scaqr"},{"post_id":"cm59lims4000525qj6uf71cdy","tag_id":"cm59lims8000o25qj0dyse8bc","_id":"cm59lims8000w25qj51jrhdpz"},{"post_id":"cm59lims4000525qj6uf71cdy","tag_id":"cm59lims8000p25qj9j83f42l","_id":"cm59lims9000x25qj6o0y8078"},{"post_id":"cm59lims4000525qj6uf71cdy","tag_id":"cm59lims8000q25qj19zt0brp","_id":"cm59lims9000y25qj75n5ccy4"},{"post_id":"cm59lims4000525qj6uf71cdy","tag_id":"cm59lims8000r25qj0iv68996","_id":"cm59lims9000z25qj3ru4a0qi"},{"post_id":"cm5bslhlp00003foa9z7ha0dk","tag_id":"cm59lims3000425qj2caeerr4","_id":"cm5bslhlv00023foa14hrf861"},{"post_id":"cm5bslhlp00003foa9z7ha0dk","tag_id":"cm5bv3n7w00002aovckwa14at","_id":"cm5bv3n7z00022aov78yl8fqe"},{"post_id":"cm5bslhlp00003foa9z7ha0dk","tag_id":"cm5bv3n7y00012aov3gdtglel","_id":"cm5bv3n7z00032aovfqqbe5ew"}],"Tag":[{"name":"npm","_id":"cm59lims3000425qj2caeerr4"},{"name":"frontend","_id":"cm59lims4000725qj5jd703jw"},{"name":"javascript","_id":"cm59lims5000925qja8ku8qbr"},{"name":"lua","_id":"cm59lims6000b25qj7b88baqa"},{"name":"scripting","_id":"cm59lims6000e25qjck7nf45w"},{"name":"programming","_id":"cm59lims6000g25qj5wbjhsc7"},{"name":"concurrency","_id":"cm59lims6000h25qj7kk96d8j"},{"name":"synchronization","_id":"cm59lims7000k25qjhzba4od4"},{"name":"low-level","_id":"cm59lims7000m25qjg0ekelag"},{"name":"c","_id":"cm59lims7000n25qj85job81j"},{"name":"c++","_id":"cm59lims8000o25qj0dyse8bc"},{"name":"posix","_id":"cm59lims8000p25qj9j83f42l"},{"name":"linux","_id":"cm59lims8000q25qj19zt0brp"},{"name":"macos","_id":"cm59lims8000r25qj0iv68996"},{"name":"devops","_id":"cm5bv3n7w00002aovckwa14at"},{"name":"docker","_id":"cm5bv3n7y00012aov3gdtglel"}]}}